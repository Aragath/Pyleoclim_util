2017-07-18 15:50:10,209 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,209 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'createDir')
2017-07-18 15:50:10,210 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function createDir at 0x1244e2950>
2017-07-18 15:50:10,238 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.createDir', <function createDir at 0x1244e2950>, {}, ['Create a ne
2017-07-18 15:50:10,238 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: createDir(path, foldername)
   :module: pyleoclim.LipdUtils

   Create a new folder in a working directory
   
   Create a new folder in a working directory to save outputs from Pyleoclim.
   
   Args:
       path(str): the path to the new folder.
       foldername(str): the name of the folder to be created
       
   Returns:
       newdir - the full path to the new directory
       
   
2017-07-18 15:50:10,245 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:11: input:
.. autofunction:: pyleoclim.LipdUtils.saveFigure

2017-07-18 15:50:10,245 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import saveFigure
2017-07-18 15:50:10,245 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,245 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,245 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'saveFigure')
2017-07-18 15:50:10,245 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function saveFigure at 0x1244e29d8>
2017-07-18 15:50:10,246 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.saveFigure', <function saveFigure at 0x1244e29d8>, {}, ['Save a fi
2017-07-18 15:50:10,246 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: saveFigure(name, format='eps', dir='')
   :module: pyleoclim.LipdUtils

   Save a figure
   
   Save the figure in the directory. If not given, creates a folder in the 
   current working directory. 
   
   Args:
       name (str): name of the file
       format (str): One of the file extensions supported by the active 
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
       dir (str): the name of the folder in the LiPD working directory.
           If not provided, creates a default folder called 'figures'.
           
   
2017-07-18 15:50:10,248 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,249 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,251 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:16: input:
.. autofunction:: pyleoclim.LipdUtils.enumerateLipds

2017-07-18 15:50:10,252 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import enumerateLipds
2017-07-18 15:50:10,252 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,252 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,252 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'enumerateLipds')
2017-07-18 15:50:10,252 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function enumerateLipds at 0x1244e2a60>
2017-07-18 15:50:10,252 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.enumerateLipds', <function enumerateLipds at 0x1244e2a60>, {}, ['E
2017-07-18 15:50:10,252 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: enumerateLipds(lipds)
   :module: pyleoclim.LipdUtils

   Enumerate the LiPD files loaded in the workspace
   
   Args:
       lipds (dict): A dictionary of LiPD files. Can be obtained from
           pyleoclim.readLipd()
   
   
2017-07-18 15:50:10,256 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:18: input:
.. autofunction:: pyleoclim.LipdUtils.promptForLipd

2017-07-18 15:50:10,257 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import promptForLipd
2017-07-18 15:50:10,257 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,257 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,257 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'promptForLipd')
2017-07-18 15:50:10,257 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function promptForLipd at 0x1244e2ae8>
2017-07-18 15:50:10,257 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.promptForLipd', <function promptForLipd at 0x1244e2ae8>, {}, ['Pro
2017-07-18 15:50:10,257 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: promptForLipd(lipds)
   :module: pyleoclim.LipdUtils

   Prompt for a LiPD file
   
   Ask the user to select a LiPD file from a list
   Use this function in conjunction with enumerateLipds()
   
   Args:
       lipds (dict): A dictionary of LiPD files. Can be obtained from
           pyleoclim.readLipd()
   
   Returns:
       The index of the LiPD file
       
   
2017-07-18 15:50:10,261 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:23: input:
.. autofunction:: pyleoclim.LipdUtils.promptForVariable

2017-07-18 15:50:10,262 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import promptForVariable
2017-07-18 15:50:10,262 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,262 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,262 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'promptForVariable')
2017-07-18 15:50:10,262 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function promptForVariable at 0x1244e2b70>
2017-07-18 15:50:10,262 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.promptForVariable', <function promptForVariable at 0x1244e2b70>, {
2017-07-18 15:50:10,262 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: promptForVariable()
   :module: pyleoclim.LipdUtils

   Prompt for a specific variable
   
   Ask the user to select the variable they are interested in.
   Use this function in conjunction with readHeaders() or getTSO()
   
   Returns:
       The index of the variable
       
   
2017-07-18 15:50:10,266 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:25: input:
.. autofunction:: pyleoclim.LipdUtils.xAxisTs

2017-07-18 15:50:10,266 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import xAxisTs
2017-07-18 15:50:10,266 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,266 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,266 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'xAxisTs')
2017-07-18 15:50:10,266 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function xAxisTs at 0x1244e2bf8>
2017-07-18 15:50:10,267 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.xAxisTs', <function xAxisTs at 0x1244e2bf8>, {}, ['Prompt the user
2017-07-18 15:50:10,267 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: xAxisTs(timeseries)
   :module: pyleoclim.LipdUtils

   Prompt the user to choose a x-axis representation for the timeseries.
   
   Args:
       timeseries: a timeseries object
       
   Returns:
       x_axis - the values for the x-axis representation, 
   
       label - returns either "age", "year", or "depth"
       
   
2017-07-18 15:50:10,272 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:27: input:
.. autofunction:: pyleoclim.LipdUtils.checkXaxis

2017-07-18 15:50:10,272 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import checkXaxis
2017-07-18 15:50:10,272 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,273 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,273 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'checkXaxis')
2017-07-18 15:50:10,273 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function checkXaxis at 0x1244e2c80>
2017-07-18 15:50:10,273 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.checkXaxis', <function checkXaxis at 0x1244e2c80>, {}, ['Check tha
2017-07-18 15:50:10,273 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: checkXaxis(timeseries, x_axis='')
   :module: pyleoclim.LipdUtils

   Check that a x-axis is present for the timeseries
   
   Args:
       timeseries : a timeseries
       x_axis (str) : the x-axis representation, either depth, age or year
       
   Returns:
       x - the values for the x-axis representation, 
   
       label - returns either "age", "year", or "depth"    
   
   
2017-07-18 15:50:10,277 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:32: input:
.. autofunction:: pyleoclim.LipdUtils.enumerateTs

2017-07-18 15:50:10,277 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import enumerateTs
2017-07-18 15:50:10,278 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,278 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,278 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'enumerateTs')
2017-07-18 15:50:10,278 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function enumerateTs at 0x1244e2d08>
2017-07-18 15:50:10,278 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.enumerateTs', <function enumerateTs at 0x1244e2d08>, {}, ['Enumera
2017-07-18 15:50:10,278 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: enumerateTs(timeseries_list)
   :module: pyleoclim.LipdUtils

   Enumerate the available time series objects
   
   Args:
       timeseries_list: a  list of available timeseries objects. 
           To use the timeseries loaded upon initiation of the 
           pyleoclim package, use pyleo.time_series.
           
   
2017-07-18 15:50:10,283 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:34: input:
.. autofunction:: pyleoclim.LipdUtils.getTs

2017-07-18 15:50:10,283 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import getTs
2017-07-18 15:50:10,283 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,283 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,283 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'getTs')
2017-07-18 15:50:10,283 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function getTs at 0x1244e2d90>
2017-07-18 15:50:10,283 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.getTs', <function getTs at 0x1244e2d90>, {}, ['Get a specific time
2017-07-18 15:50:10,283 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: getTs(timeseries_list)
   :module: pyleoclim.LipdUtils

   Get a specific timeseries object from a dictionary of timeseries
   
   Args:
       timeseries_list: a  list of available timeseries objects. 
           To use the timeseries loaded upon initiation of the 
           pyleoclim package, use pyleo.time_series.
           
   Returns:
       A single timeseries object 
       
   
2017-07-18 15:50:10,288 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:39: input:
.. autofunction:: pyleoclim.LipdUtils.LipdToOntology
2017-07-18 15:50:10,289 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import LipdToOntology
2017-07-18 15:50:10,289 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:50:10,289 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:50:10,289 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'LipdToOntology')
2017-07-18 15:50:10,289 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function LipdToOntology at 0x1244e2e18>
2017-07-18 15:50:10,289 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.LipdToOntology', <function LipdToOntology at 0x1244e2e18>, {}, ['s
2017-07-18 15:50:10,289 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: LipdToOntology(archiveType)
   :module: pyleoclim.LipdUtils

   standardize archiveType
   
   Transform the archiveType from their LiPD name to their ontology counterpart
   
   Args:
       archiveType (STR): name of the archiveType from the LiPD file
       
   Returns:
       archiveType according to the ontology
       
   
2017-07-18 15:50:10,306 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py:docstring of pyleoclim.LipdUtils.saveFigure:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:10,306 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py:docstring of pyleoclim.LipdUtils.saveFigure:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:10,307 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "lipd utilities"...>>,)
2017-07-18 15:50:10,314 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 33%] [35mMain[39;49;00m                                                  
2017-07-18 15:50:10,314 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>, 'Main')
2017-07-18 15:50:10,317 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Main', ['Main Functions\n==============\n\n\nUsing Pyleoclim with a LiPD file\n"""""""""""""""""""
2017-07-18 15:50:10,320 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:27: input:
.. autofunction:: pyleoclim.readLipd
2017-07-18 15:50:10,320 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import readLipd
2017-07-18 15:50:10,321 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:10,321 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:10,321 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'readLipd')
2017-07-18 15:50:10,321 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function readLipd at 0x1244e2ea0>
2017-07-18 15:50:10,649 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.readLipd', <function readLipd at 0x1244e2ea0>, {}, ['Read Lipd files into a 
2017-07-18 15:50:10,650 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: readLipd(usr_path='')
   :module: pyleoclim

   Read Lipd files into a dictionary
   
   This function is based on the function of the same name in the LiPD utilities.
   Sets the dictionary as global variable so that it doesn't have to be provided
   as an argument for every function.
   
   Args:
       usr_path (str): The path to a directory or a single file. (Optional argument)
       
   Returns:
       lipd_dict - a dictionary containing the LiPD library
   
   
2017-07-18 15:50:10,655 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:28: input:
.. autofunction:: pyleoclim.extractTs

2017-07-18 15:50:10,655 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import extractTs
2017-07-18 15:50:10,655 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:10,656 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:10,656 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'extractTs')
2017-07-18 15:50:10,656 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function extractTs at 0x1254c0ea0>
2017-07-18 15:50:10,656 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.extractTs', <function extractTs at 0x1254c0ea0>, {}, ['Extract timeseries di
2017-07-18 15:50:10,656 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: extractTs(lipds=None)
   :module: pyleoclim

   Extract timeseries dictionary
   
   This function is based on the function of the same name in the LiPD utilities.
   Set the dictionary as a global variable so that it doesn't have to be
   provided as an argument for every function. 
   
   Args:
       lipds (dict): A dictionary of LiPD files obtained through the 
       readLipd function
   
   Returns:
       ts_list - A list of timeseries object
   
   
2017-07-18 15:50:10,660 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:32: input:
.. autofunction:: pyleoclim.mapAllArchive

2017-07-18 15:50:10,661 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import mapAllArchive
2017-07-18 15:50:10,661 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:10,661 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:10,661 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapAllArchive')
2017-07-18 15:50:10,661 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapAllArchive at 0x1254c0f28>
2017-07-18 15:50:10,661 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.mapAllArchive', <function mapAllArchive at 0x1254c0f28>, {}, ['Map all the a
2017-07-18 15:50:10,661 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapAllArchive(lipds='', markersize=50, background='shadedrelief', figsize=[10, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Map all the available records loaded into the workspace by archiveType.
   
   Map of all the records into the workspace by archiveType.
       Uses the default color palette. Enter pyleoclim.plot_default for detail.
   
   Args:
       lipds (dict): A dictionary of LiPD files. (Optional)
       markersize (int): The size of the markers. Default is 50
       background (str): Plots one of the following images on the map:
           bluemarble, etopo, shadedrelief, or none (filled continents).
           Default is shadedrelief.
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)     
       saveFig (bool): Default is to not save the figure
       dir (str): The absolute path of the directory in which to save the
           figure. If not provided, creates a default folder called 'figures'
           in the LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
2017-07-18 15:50:10,664 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,666 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,666 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,666 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,669 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:34: input:
.. autofunction:: pyleoclim.mapLipd

2017-07-18 15:50:10,669 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import mapLipd
2017-07-18 15:50:10,670 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:10,670 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:10,670 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapLipd')
2017-07-18 15:50:10,670 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapLipd at 0x1254a4048>
2017-07-18 15:50:10,670 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.mapLipd', <function mapLipd at 0x1254a4048>, {}, ['Create a Map for a single
2017-07-18 15:50:10,671 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapLipd(timeseries='', countries=True, counties=False, rivers=False, states=False, background='shadedrelief', scale=0.5, markersize=50, marker='default', figsize=[4, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Create a Map for a single record
   
   Orthographic projection map of a single record.
   
   Args:
       timeseries: a LiPD timeseries object. Will prompt for one if not given
       countries (bool): Draws the country borders. Default is on (True).
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders.
           Default is off (False)
       background (str): Plots one of the following images on the map:
           bluemarble, etopo, shadedrelief, or none (filled continents).
           Default is shadedrelief
       scale (float): useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       markersize (int): default is 50
       marker (str): a string (or list) containing the color and shape of the
           marker. Default is by archiveType. Type pyleo.plot_default to see
           the default palette.
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
   
2017-07-18 15:50:10,674 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,674 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,676 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,676 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,677 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,677 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,677 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,683 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:38: input:
.. autofunction:: pyleoclim.plotTs

2017-07-18 15:50:10,684 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import plotTs
2017-07-18 15:50:10,684 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:10,684 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:10,684 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plotTs')
2017-07-18 15:50:10,685 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plotTs at 0x1254a40d0>
2017-07-18 15:50:10,685 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.plotTs', <function plotTs at 0x1254a40d0>, {}, ['Plot a single time series.'
2017-07-18 15:50:10,685 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plotTs(timeseries='', x_axis='', markersize=50, marker='default', figsize=[10, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Plot a single time series.
   
   Args:
       A timeseries: By default, will prompt the user for one.
       x_axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       markersize (int): default is 50.
       marker (str): a string (or list) containing the color and shape of the
           marker. Default is by archiveType. Type pyleo.plot_default to see
           the default palette.
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure.
   
   
2017-07-18 15:50:10,687 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,687 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,687 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,688 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,689 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,690 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,695 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:40: input:
.. autofunction:: pyleoclim.histTs

2017-07-18 15:50:10,696 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import histTs
2017-07-18 15:50:10,696 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:10,696 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:10,696 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'histTs')
2017-07-18 15:50:10,696 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function histTs at 0x1254a4158>
2017-07-18 15:50:10,697 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.histTs', <function histTs at 0x1254a4158>, {}, ['Plot a univariate distribut
2017-07-18 15:50:10,697 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: histTs(timeseries='', bins=None, hist=True, kde=True, rug=False, fit=None, hist_kws={'label': 'Histogram'}, kde_kws={'label': 'KDE fit'}, rug_kws={'label': 'Rug'}, fit_kws={'label': 'Fit'}, color='default', vertical=False, norm_hist=True, figsize=[5, 5], saveFig=False, format='eps', dir='')
   :module: pyleoclim

   Plot a univariate distribution of the PaleoData values
   
   This function is based on the seaborn displot function, which is
   itself a combination of the matplotlib hist function with the
   seaborn kdeplot() and rugplot() functions. It can also fit
   scipy.stats distributions and plot the estimated PDF over the data.
   
   Args:
       timeseries: A timeseries. By default, will prompt the user for one.
       bins (int): Specification of hist bins following matplotlib(hist),
           or None to use Freedman-Diaconis rule
       hist (bool): Whether to plot a (normed) histogram
       kde (bool): Whether to plot a gaussian kernel density estimate
       rug (bool): Whether to draw a rugplot on the support axis
       fit: Random variable object. An object with fit method, returning
           a tuple that can be passed to a pdf method of positional
           arguments following a grid of values to evaluate the pdf on.
       {hist, kde, rug, fit}_kws: Dictionaries. Keyword arguments for
           underlying plotting functions. If modifying the dictionary, make
           sure the labels "hist", "kde", "rug" and "fit" are still passed.
       color (str): matplotlib color. Color to plot everything but the
           fitted curve in. Default is to use the default paletter for each
           archive type.
       vertical (bool): if True, oberved values are on y-axis.
       norm_hist (bool): If True (default), the histrogram height shows
           a density rather than a count. This is implied if a KDE or
           fitted density is plotted
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns
       fig - The figure
   
   
2017-07-18 15:50:10,722 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,738 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,749 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,760 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,774 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,789 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,802 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,816 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:10,843 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:10,875 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:48: input:
.. autofunction:: pyleoclim.summaryTs

2017-07-18 15:50:10,894 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import summaryTs
2017-07-18 15:50:10,905 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:10,920 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:10,931 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'summaryTs')
2017-07-18 15:50:10,944 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function summaryTs at 0x1254a41e0>
2017-07-18 15:50:10,959 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.summaryTs', <function summaryTs at 0x1254a41e0>, {}, ['Basic summary plot', 
2017-07-18 15:50:10,971 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: summaryTs(timeseries='', x_axis='', saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Basic summary plot
   
   Plots the following information: the time series, a histogram of
   the PaleoData_values, location map, spectral density using the wwz 
   method, and metadata about the record.
   
   Args:
       timeseries: a timeseries object. By default, will prompt for one
       x_axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
   
2017-07-18 15:50:10,991 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:11,004 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,017 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:11,029 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,048 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:53: input:
.. autofunction:: pyleoclim.statsTs

2017-07-18 15:50:11,060 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import statsTs
2017-07-18 15:50:11,093 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:11,110 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:11,129 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'statsTs')
2017-07-18 15:50:11,144 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function statsTs at 0x1254a4268>
2017-07-18 15:50:11,155 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.statsTs', <function statsTs at 0x1254a4268>, {}, ['Calculate simple statisti
2017-07-18 15:50:11,167 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: statsTs(timeseries='')
   :module: pyleoclim

   Calculate simple statistics of a timeseries
   
   Args:
       timeseries: sytem will prompt for one if not given
   
   Returns:
       the mean, median, min, max, standard deviation and the
       inter-quartile range (IQR) of a timeseries.
   
   Examples:
       >>> mean, median, min_, max_, std, IQR = pyleo.statsTs(timeseries)
   
   
2017-07-18 15:50:11,185 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:55: input:
.. autofunction:: pyleoclim.corrSigTs

2017-07-18 15:50:11,201 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import corrSigTs
2017-07-18 15:50:11,217 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:11,230 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:11,241 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'corrSigTs')
2017-07-18 15:50:11,253 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function corrSigTs at 0x1254a42f0>
2017-07-18 15:50:11,267 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.corrSigTs', <function corrSigTs at 0x1254a42f0>, {}, ['Estimates the signifi
2017-07-18 15:50:11,293 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: corrSigTs(timeseries1='', timeseries2='', x_axis='', interp_step='', start='', end='', nsim=1000, method='isospectral', alpha=0.5)
   :module: pyleoclim

   Estimates the significance of correlations between non IID timeseries.
   
   Function written by. F. Zhu.
   
   Args:
       timeseries1, timeseries2: timeseries object. Default is blank.
       x-axis (str): The representation against which to express the
           paleo-data. Options are "age", "year", and "depth".
           Default is to let the system choose if only one available
           or prompt the user.
       interp_step (float): the step size. By default, will prompt the user.
       start (float): Start time/age/depth. Default is the maximum of
           the minima of the two timeseries
       end (float): End time/age/depth. Default is the minimum of the
           maxima of the two timeseries
       nsim (int): the number of simulations. Default is 1000
       method (str): method use to estimate the correlation and significance.
           Available methods include:
               - 'ttest': T-test where the degrees of freedom are corrected for
               the effect of serial correlation 
   
               - 'isopersistant': AR(1) modeling of the two timeseries 
   
               - 'isospectral' (default): phase randomization of original
               inputs.
           The T-test is parametric test, hence cheap but usually wrong
           except in idyllic circumstances.
           The others are non-parametric, but their computational
           requirements scales with nsim.
       alpha (float): significance level for critical value estimation. Default is 0.05
   
   Returns:
       r (float) - correlation between the two timeseries 
   
       sig (bool) -  Returns True if significant, False otherwise 
   
       p (real) - the p-value
   
   
2017-07-18 15:50:11,306 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:11,320 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,347 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:11,367 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,399 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,425 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:11,442 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,456 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,469 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,485 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,504 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:61: input:
.. autofunction:: pyleoclim.binTs

2017-07-18 15:50:11,518 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import binTs
2017-07-18 15:50:11,532 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:11,547 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:11,558 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'binTs')
2017-07-18 15:50:11,572 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function binTs at 0x1254a4378>
2017-07-18 15:50:11,586 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.binTs', <function binTs at 0x1254a4378>, {}, ['Bin the paleoData values of t
2017-07-18 15:50:11,609 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: binTs(timeseries='', x_axis='', bin_size='', start='', end='')
   :module: pyleoclim

   Bin the paleoData values of the timeseries
   
   Args:
       timeseries. By default, will prompt the user for one.
       x-axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system  choose if only one available or prompt the user.
       bin_size (float): the size of the bins to be used. By default,
           will prompt for one
       start (float): Start time/age/depth. Default is the minimum
       end (float): End time/age/depth. Default is the maximum
   
   Returns:
       binned_values- the binned output,
   
       bins-  the bins (centered on the median, i.e. the 100-200 bin is 150),
   
       n-  number of data points in each bin,
   
       error- the standard error on the mean in each bin
   
   
   
2017-07-18 15:50:11,633 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:11,652 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,667 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,685 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:63: input:
.. autofunction:: pyleoclim.interpTs

2017-07-18 15:50:11,703 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import interpTs
2017-07-18 15:50:11,714 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:11,728 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:11,749 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'interpTs')
2017-07-18 15:50:11,770 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function interpTs at 0x1254a4400>
2017-07-18 15:50:11,796 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.interpTs', <function interpTs at 0x1254a4400>, {}, ['Simple linear interpola
2017-07-18 15:50:11,820 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: interpTs(timeseries='', x_axis='', interp_step='', start='', end='')
   :module: pyleoclim

   Simple linear interpolation
   
   Simple linear interpolation of the data using the numpy.interp method
   
   Args:
       timeseries. Default is blank, will prompt for it
       x-axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       interp_step (float): the step size. By default, will prompt the user.
       start (float): Start year/age/depth. Default is the minimum
       end (float): End year/age/depth. Default is the maximum
   
   Returns:
       interp_age - the interpolated age/year/depth according to the end/start
       and time step, 
   
       interp_values - the interpolated values
   
   
2017-07-18 15:50:11,851 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:11,877 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:11,904 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:65: input:
.. autofunction:: pyleoclim.standardizeTs

2017-07-18 15:50:11,920 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import standardizeTs
2017-07-18 15:50:11,957 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:11,997 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:12,029 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'standardizeTs')
2017-07-18 15:50:12,058 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function standardizeTs at 0x1254a4488>
2017-07-18 15:50:12,080 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.standardizeTs', <function standardizeTs at 0x1254a4488>, {}, ['Centers and n
2017-07-18 15:50:12,143 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: standardizeTs(timeseries='', scale=1, ddof=0, eps=0.001)
   :module: pyleoclim

   Centers and normalizes the paleoData values of a  given time series.
   
   Constant or nearly constant time series not rescaled.
   
   Args:
       x (array): vector of (real) numbers as a time series, NaNs allowed
       scale (real): a scale factor used to scale a record to a match a given variance
       axis (int or None): axis along which to operate, if None, compute over the whole array
       ddof (int): degress of freedom correction in the calculation of the standard deviation
       eps (real): a threshold to determine if the standard deviation is too close to zero
   
   Returns:
       - z (array): the standardized time series (z-score), Z = (X - E[X])/std(X)*scale, NaNs allowed 
   
       - mu (real): the mean of the original time series, E[X] 
   
       - sig (real): the standard deviation of the original time series, std[X] 
   
   
   References:
       1. Tapio Schneider's MATLAB code: http://www.clidyn.ethz.ch/imputation/standardize.m
       2. The zscore function in SciPy: https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py
   
   @author: fzhu
   
2017-07-18 15:50:12,173 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:69: input:
.. autofunction:: pyleoclim.wwzTs

2017-07-18 15:50:12,192 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import wwzTs
2017-07-18 15:50:12,215 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:50:12,230 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:50:12,248 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwzTs')
2017-07-18 15:50:12,268 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwzTs at 0x1254a4598>
2017-07-18 15:50:12,286 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.wwzTs', <function wwzTs at 0x1254a4598>, {}, ['Weigthed wavelet Z-transform 
2017-07-18 15:50:12,315 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwzTs(timeseries='', wwz=False, psd=True, wwz_default=True, psd_default=True, wwaplot_default=True, psdplot_default=True, fig=True, saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Weigthed wavelet Z-transform analysis
   
   Wavelet analysis for unevenly spaced data adapted from Foster et al. (1996)
   
   Args:
       timeseries (dict): A LiPD timeseries object (Optional, will prompt for one.)
       wwz (bool): If True, will perform wavelet analysis
       psd (bool): If True, will inform the power spectral density of the timeseries
       wwz_default: If True, will use the following default parameters:
           
           wwz_default = {'tau':None,'freqs':None,'c':1/(8*np.pi**2),'Neff':3,'nMC':200,
                              'nproc':8,'detrend':'no','method':'Kirchner_f2py'}.
               
           Modify the values for specific keys to change the default behavior.
               
       psd_default: If True, will use the following default parameters:
           
           psd_default = {'tau':None,
                         'freqs': None,
                         'c':1e-3,
                         'nproc':8,
                         'nMC':200,
                         'detrend':'no',
                         'Neff':3,
                         'anti_alias':False,
                         'avgs':2,
                         'method':'Kirchner_f2py'}
           
           Modify the values for specific keys to change the default behavior.
           
       wwaplot_default: If True, will use the following default parameters:
           
           wwaplot_default={'Neff':3,
                                'AR1_q':AR1_q,
                                'coi':coi,
                                'levels':None,
                                'tick_range':None,
                                'yticks':None,
                                'ylim':None,
                                'xticks':None,
                                'xlabels':None,
                                'figsize':[20,8],
                                'clr_map':'OrRd',
                                'cbar_drawedges':False,
                                'cone_alpha':0.5,
                                'plot_signif':True,
                                'signif_style':'contour',
                                'plot_cone':True}
           
           Modify the values for specific keys to change the default behavior.
       psdplot_default: If True, will use the following default parameters:
           
           psdplot_default={'lmstyle':None,
                            'linewidth':None,
                            'xticks':None,
                            'xlim':None,
                            'ylim':None,
                            'figsize':[20,8],
                            'label':'PSD',
                            'plot_ar1':True,
                            'psd_ar1_q95':psd_ar1_q95,
                            'psd_ar1_color':sns.xkcd_rgb["pale red"]}
           
           Modify the values for specific keys to change the default behavior.
           
       fig (bool): If True, plots the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
       
   Returns:
       dict_out (dict): A dictionary of outputs. 
           
           For wwz: 
           
           - wwa (array): The weights wavelet amplitude 
       
           - AR1_q (array): AR1 simulations 
       
           - coi (array): cone of influence 
       
           - freqs (array): vector for frequencies 
       
           - tau (array): the evenly-spaced time points, namely the time 
           shift for wavelet analysis. 
       
           - Neffs (array): The matrix of effective number of points in the
           time-scale coordinates.
       
           - coeff (array): The wavelet transform coefficients
       
           For psd: 
           
           - psd (array): power spectral density 
       
           - freqs (array): vector of frequency 
       
           - psd_ar1_q95 (array): the 95% quantile of the psds of AR1 processes 
       
       fig: The figure
        
       References:
           Foster, G. (1996). Wavelets for period analysis of unevenly 
           sampled time series. The Astronomical Journal, 112(4), 1709-1729.
       
       Examples:
           To run both wwz and psd: 
   
           
           >>> dict_out, fig = pyleoclim.wwzTs(wwz=True)
           
           Note: This will return a single figure with wwa and psd 
   
           
           To change a default behavior:
   
           
           >>> dict_out, fig = pyleoclim.wwzTs(psd_default = {'nMC':1000}) 
          
   
2017-07-18 15:50:12,356 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:12,372 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:12,390 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:12,421 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 15:50:12,453 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 15:50:12,553 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,572 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,586 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:16: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,602 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:18: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,624 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,640 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,655 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:17: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,668 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:19: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,688 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:21: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,707 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:24: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,725 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:26: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,738 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:6: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,751 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:8: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,763 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,777 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,790 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:15: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,804 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:17: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,821 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,836 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,854 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:16: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,866 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:18: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,878 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,893 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:26: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,906 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:28: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,933 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:31: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,954 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:33: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:12,972 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:12,996 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,019 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:14: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:13,034 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:16: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,047 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:13,067 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,091 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:13: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:13,111 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:14: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,129 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:16: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,142 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:18: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:13,159 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:20: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,172 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:25: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,184 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:26: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,199 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:30: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,227 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:6: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:13,245 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:8: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,267 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:10: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,279 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.interpTs:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:13,292 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.interpTs:10: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,304 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:51: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,319 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:69: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:13,345 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:71: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,393 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:89: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,412 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:92: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:13,432 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "main functions"...>>,)
2017-07-18 15:50:13,477 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 44%] [35mMap[39;49;00m                                                   
2017-07-18 15:50:13,495 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>, 'Map')
2017-07-18 15:50:13,510 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Map', ['Mapping Functions\n=================\n\nThis module uses the Basemap package for mapping. 
2017-07-18 15:50:13,525 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Map.rst:6: input:
.. autofunction:: pyleoclim.Map.mapAll

2017-07-18 15:50:13,541 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Map import mapAll
2017-07-18 15:50:13,555 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Map
2017-07-18 15:50:13,571 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Map' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Map.py'>
2017-07-18 15:50:13,585 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapAll')
2017-07-18 15:50:13,598 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapAll at 0x10ff8ba60>
2017-07-18 15:50:13,650 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Map.mapAll', <function mapAll at 0x10ff8ba60>, {}, ['Map the location of all
2017-07-18 15:50:13,665 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapAll(lat, lon, criteria, projection='robin', lat_0='', lon_0='', llcrnrlat=-90, urcrnrlat=90, llcrnrlon=-180, urcrnrlon=180, countries=False, counties=False, rivers=False, states=False, figsize=[10, 4], ax=None, background='none', scale=0.5, palette='', markersize=50)
   :module: pyleoclim.Map

   Map the location of all lat/lon according to some criteria 
   
   Map the location of all lat/lon according to some criteria. The choice of 
   plotting color/marker is passed through palette according to unique 
   criteria (e.g., record name, archive type, proxy observation type).
   
   Args:
       lat (list): a list of latitude.
       lon (list): a list of longitude.
       criteria (list): a list of criteria for plotting purposes. For instance,
           a map by the types of archive present in the dataset or proxy
           observations.
       projection (string): the map projection. Refers to the Basemap
           documentation for a list of available projections. Only projections
           supporting setting the map center with a single lat/lon or with
           the coordinates of the rectangle are currently supported. 
           Default is to use a Robinson projection.
       lat_0, lon_0 (float): the center coordinates for the map. Default is
           mean latitude/longitude in the list. 
           If the chosen projection doesn't support it, Basemap will
           ignore the given values.
       llcrnrlat, urcrnrlat, llcrnrlon, urcrnrlon (float): The coordinates
           of the two opposite corners of the rectangle.
       countries (bool): Draws the countries border. Defaults is off (False). 
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders. 
           Default is off (False).
       background (string): Plots one of the following images on the map: 
           bluemarble, etopo, shadedrelief, or none (filled continents). 
           Default is none.
       scale (float): Useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       palette (dict): A dictionary of plotting color/marker by criteria. The
           keys should correspond to ***unique*** criteria with a list of 
           associated values. The list should be in the format 
           ['color', 'marker'].
       markersize (int): The size of the marker.
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot) 
       
   Returns:
       The figure       
   
2017-07-18 15:50:13,681 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:13,697 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:13,718 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:13,738 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:13,761 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:13,778 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:13,794 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Map.rst:8: input:
.. autofunction:: pyleoclim.Map.mapOne
2017-07-18 15:50:13,809 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Map import mapOne
2017-07-18 15:50:13,827 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Map
2017-07-18 15:50:13,857 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Map' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Map.py'>
2017-07-18 15:50:13,895 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapOne')
2017-07-18 15:50:13,914 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapOne at 0x1244e28c8>
2017-07-18 15:50:13,940 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Map.mapOne', <function mapOne at 0x1244e28c8>, {}, ['Map one location on the
2017-07-18 15:50:13,958 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapOne(lat, lon, projection='ortho', lat_0='', lon_0='', llcrnrlat=-90, urcrnrlat=90, llcrnrlon=-180, urcrnrlon=180, countries=True, counties=False, rivers=False, states=False, background='shadedrelief', scale=0.5, markersize=50, marker='ro', figsize=[4, 4], ax=None)
   :module: pyleoclim.Map

   Map one location on the globe
   
   Args:
       lat (float): a float number representing latitude
       lon (float): a float number representing longitude
       projection (string): the map projection. Refers to the Basemap
           documentation for a list of available projections. Only projections
           supporting setting the map center with a single lat/lon or with
           the coordinates of the rectangle are currently supported. 
           Default is to use a Robinson projection.
       lat_0, lon_0 (float): the center coordinates for the map. Default is
           mean latitude/longitude in the list. 
           If the chosen projection doesn't support it, Basemap will
           ignore the given values.
       llcrnrlat, urcrnrlat, llcrnrlon, urcrnrlon (float): The coordinates
           of the two opposite corners of the rectangle.
       countries (bool): Draws the countries border. Defaults is off (False). 
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders. 
           Default is off (False).
       background (string): Plots one of the following images on the map: 
           bluemarble, etopo, shadedrelief, or none (filled continents). 
           Default is none.
       scale (float): Useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       markersize (int): The size of the marker.
       marker (str or list): color and type of marker. 
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot) 
   
   
2017-07-18 15:50:13,979 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:13,997 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:14,014 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:14,029 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:14,049 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:14,069 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:14,099 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:14,115 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:13: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,128 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,147 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:28: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:14,161 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:29: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,176 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:38: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,190 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:7: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:14,202 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,215 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:17: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,230 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:21: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:14,250 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:22: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,270 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:27: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,284 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "mapping functions"...>>,)
2017-07-18 15:50:14,305 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 55%] [35mPlot[39;49;00m                                                  
2017-07-18 15:50:14,325 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>, 'Plot')
2017-07-18 15:50:14,357 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Plot', ['Plotting Functions\n==================\n\n.. autofunction:: pyleoclim.Plot.plot\n\n.. aut
2017-07-18 15:50:14,372 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Plot.rst:4: input:
.. autofunction:: pyleoclim.Plot.plot

2017-07-18 15:50:14,386 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Plot import plot
2017-07-18 15:50:14,400 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Plot
2017-07-18 15:50:14,412 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Plot' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py'>
2017-07-18 15:50:14,427 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot')
2017-07-18 15:50:14,442 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot at 0x1244eb1e0>
2017-07-18 15:50:14,476 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Plot.plot', <function plot at 0x1244eb1e0>, {}, ['Make a 2-D plot', '', 'Arg
2017-07-18 15:50:14,490 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot(x, y, markersize=50, marker='ro', x_label='', y_label='', title='', figsize=[10, 4], ax=None)
   :module: pyleoclim.Plot

   Make a 2-D plot
   
   Args:
       x (numpy array): a 1xn numpy array of values for the x-axis
       y (numpy array): a 1xn numpy array for the y-axis
       markersize (int): the size of the marker
       marker (string or list): color and shape of the marker
       x_axis_label (str): the label for the x-axis
       y_axis_label (str): the label for the y-axis
       title (str): the title for the plot
       figsize (list): the size of the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
           
   Return:
       The figure       
   
   
2017-07-18 15:50:14,507 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Plot.rst:6: input:
.. autofunction:: pyleoclim.Plot.plot_hist
2017-07-18 15:50:14,522 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Plot import plot_hist
2017-07-18 15:50:14,544 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Plot
2017-07-18 15:50:14,567 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Plot' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py'>
2017-07-18 15:50:14,586 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_hist')
2017-07-18 15:50:14,605 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_hist at 0x1244eb268>
2017-07-18 15:50:14,625 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Plot.plot_hist', <function plot_hist at 0x1244eb268>, {}, ['Plot a univariat
2017-07-18 15:50:14,644 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_hist(y, bins=None, hist=True, label='', kde=True, rug=False, fit=None, hist_kws={'label': 'Histogram'}, kde_kws={'label': 'KDE fit'}, rug_kws={'label': 'rug'}, fit_kws={'label': 'fit'}, color='0.7', vertical=False, norm_hist=True, figsize=[5, 5], ax=None)
   :module: pyleoclim.Plot

   Plot a univariate distribution of the PaleoData values
           
   This function is based on the seaborn displot function, which is
   itself a combination of the matplotlib hist function with the 
   seaborn kdeplot() and rugplot() functions. It can also fit 
   scipy.stats distributions and plot the estimated PDF over the data.
       
   Args:
       y (array): nx1 numpy array. No missing values allowed 
       bins (int): Specification of hist bins following matplotlib(hist), 
           or None to use Freedman-Diaconis rule
       hist (bool): Whether to plot a (normed) histogram 
       label (str): The label for the axis
       kde (bool): Whether to plot a gaussian kernel density estimate
       rug (bool): Whether to draw a rugplot on the support axis
       fit: Random variable object. An object with fit method, returning 
           a tuple that can be passed to a pdf method of positional 
           arguments following a grid of values to evaluate the pdf on.
       {hist, kde, rug, fit}_kws: Dictionaries. Keyword arguments for 
           underlying plotting functions. If modifying the dictionary, make
           sure the labels "hist", "kde", "rug" and "fit" are still passed.
       color (str): matplotlib color. Color to plot everything but the
           fitted curve in.
       vertical (bool): if True, oberved values are on y-axis.
       norm_hist (bool): If True (default), the histrogram height shows
           a density rather than a count. This is implied if a KDE or 
           fitted density is plotted
       figsize (list): the size of the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)     
   
   Returns
      fig - The figure
   
2017-07-18 15:50:14,662 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:14,675 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:14,690 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:14,705 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:14,720 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:50:14,736 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:14,754 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:14,778 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:14,793 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,805 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:17: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:14,818 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:19: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,834 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,847 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:26: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:14,874 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:28: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:14,897 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "plotting functions"...>>,)
2017-07-18 15:50:14,925 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 66%] [35mSpectral[39;49;00m                                              
2017-07-18 15:50:14,940 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>, 'Spectral')
2017-07-18 15:50:14,963 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Spectral', ['Spectral Functions\n==================\n\nThis module allows analysis in the frequenc
2017-07-18 15:50:14,977 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:6: input:
.. autofunction:: pyleoclim.Spectral.ar1_fit

2017-07-18 15:50:14,992 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import ar1_fit
2017-07-18 15:50:15,010 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:50:15,032 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:50:15,055 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'ar1_fit')
2017-07-18 15:50:15,077 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function ar1_fit at 0x1244eb378>
2017-07-18 15:50:15,525 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.ar1_fit', <function ar1_fit at 0x1244eb378>, {}, ['Returns the lag-
2017-07-18 15:50:15,541 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: ar1_fit(ys, ts=None, detrend='no')
   :module: pyleoclim.Spectral

   Returns the lag-1 autocorrelation from ar1 fit OR persistence from tauest.
   
   Args:
       ys (array): the time series
       ts (array): the time axis of that series
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
   
   Returns:
       g (float): lag-1 autocorrelation coefficient (for evenly-spaced time series)
       OR estimated persistence (for unevenly-spaced time series)
   
2017-07-18 15:50:15,607 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:15,627 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:8: input:
.. autofunction:: pyleoclim.Spectral.ar1_sim

2017-07-18 15:50:15,650 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import ar1_sim
2017-07-18 15:50:15,664 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:50:15,682 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:50:15,697 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'ar1_sim')
2017-07-18 15:50:15,714 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function ar1_sim at 0x1253f10d0>
2017-07-18 15:50:15,729 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.ar1_sim', <function ar1_sim at 0x1253f10d0>, {}, ['Produce p realiz
2017-07-18 15:50:15,743 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: ar1_sim(ys, n, p, ts=None, detrend='no')
   :module: pyleoclim.Spectral

   Produce p realizations of an AR1 process of length n with lag-1 autocorrelation g calculated from `ys` and `ts`
   
   Args:
       ys (array): a time series
       n, p (int): dimensions as n rows by p columns
       ts (array): the time axis of that series
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
   
   Returns:
       red (matrix): n rows by p columns matrix of an AR1 process
   
   
2017-07-18 15:50:15,770 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:15,803 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:10: input:
.. autofunction:: pyleoclim.Spectral.wwz

2017-07-18 15:50:15,830 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import wwz
2017-07-18 15:50:15,869 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:50:15,898 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:50:15,920 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwz')
2017-07-18 15:50:15,937 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwz at 0x1253f1158>
2017-07-18 15:50:15,954 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.wwz', <function wwz at 0x1253f1158>, {}, ['Return the weighted wave
2017-07-18 15:50:15,977 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwz(ys, ts, tau=None, freqs=None, c=0.012665147955292222, Neff=3, nMC=200, nproc=8, detrend='no', method='Kirchner_f2py')
   :module: pyleoclim.Spectral

   Return the weighted wavelet amplitude (WWA) with phase, AR1_q, and cone of influence, as well as WT coeeficients
   
   Args:
       ys (array): a time series, NaNs will be deleted automatically
       ts (array): the time points, if `ys` contains any NaNs, some of the time points will be deleted accordingly
       tau (array): the evenly-spaced time points
       freqs (array): vector of frequency
       c (float): the decay constant, the default value 1/(8*np.pi**2) is good for most of the cases
       Neff (int): effective number of points
       nMC (int): the number of Monte-Carlo simulations
       nproc (int): the number of processes for multiprocessing
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
       method (str): 'Foster' - the original WWZ method;
                     'Kirchner' - the method Kirchner adapted from Foster;
                     'Kirchner_f2py' - the method Kirchner adapted from Foster with f2py
   
   Returns:
       wwa (array): the weighted wavelet amplitude.
       AR1_q (array): AR1 simulations
       coi (array): cone of influence
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       Neffs (array): the matrix of effective number of points in the time-scale coordinates
       coeff (array): the wavelet transform coefficents
   
   
2017-07-18 15:50:16,007 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:16,030 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:16,047 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:12: input:
.. autofunction:: pyleoclim.Spectral.wwz_psd

2017-07-18 15:50:16,081 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import wwz_psd
2017-07-18 15:50:16,110 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:50:16,126 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:50:16,141 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwz_psd')
2017-07-18 15:50:16,154 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwz_psd at 0x1253f11e0>
2017-07-18 15:50:16,168 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.wwz_psd', <function wwz_psd at 0x1253f11e0>, {}, ['Return the psd o
2017-07-18 15:50:16,189 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwz_psd(ys, ts, freqs=None, tau=None, c=0.001, nproc=8, nMC=200, detrend='no', Neff=3, anti_alias=False, avgs=2, method='Kirchner_f2py')
   :module: pyleoclim.Spectral

   Return the psd of a timeseires directly using wwz method.
   
   Args:
       ys (array): a time series, NaNs will be deleted automatically
       ts (array): the time points, if `ys` contains any NaNs, some of the time points will be deleted accordingly
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       c (float): the decay constant, the default value 1e-3 is good for most of the cases
       nproc (int): the number of processes for multiprocessing
       nMC (int): the number of Monte-Carlo simulations
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
       method (str): 'Foster' - the original WWZ method;
                     'Kirchner' - the method Kirchner adapted from Foster;
                     'Kirchner_f2py' - the method Kirchner adapted from Foster with f2py
   
   Returns:
       psd (array): power spectral density
       freqs (array): vector of frequency
       psd_ar1_q95 (array): the 95% quantile of the psds of AR1 processes
   
   
2017-07-18 15:50:16,368 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:16,391 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:16,420 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:14: input:
.. autofunction:: pyleoclim.Spectral.plot_wwa

2017-07-18 15:50:16,439 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_wwa
2017-07-18 15:50:16,457 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:50:16,470 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:50:16,487 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_wwa')
2017-07-18 15:50:16,503 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_wwa at 0x1253f12f0>
2017-07-18 15:50:16,519 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_wwa', <function plot_wwa at 0x1253f12f0>, {}, ['Plot the wavel
2017-07-18 15:50:16,532 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_wwa(wwa, freqs, tau, Neff=3, AR1_q=None, coi=None, levels=None, tick_range=None, yticks=None, ylim=None, xticks=None, xlabels=None, figsize=[20, 8], clr_map='OrRd', cbar_drawedges=False, cone_alpha=0.5, plot_signif=False, signif_style='contour', plot_cone=False, ax=None, xlabel='Year', ylabel='Period')
   :module: pyleoclim.Spectral

   Plot the wavelet amplitude
   
   Args:
       wwa (array): the weighted wavelet amplitude.
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       Neff (int): effective number of points
       AR1_q (array): AR1 simulations
       coi (array): cone of influence
       levels (array): levels of values to plot
       tick_range (array): levels of ticks to show on the colorbar
       yticks (list): ticks on y-axis
       ylim (list): limitations for y-axis
       xticks (list): ticks on x-axis
       figsize (list): the size for the figure
       clr_map (str): the name of the colormap
       cbar_drawedges (bool): whether to draw edges on the colorbar or not
       cone_alpha (float): the alpha value for the area covered by cone of influence
       plot_signif (bool): plot 95% significant area or not
       signif_style (str): plot 95% significant area with `contour` or `shade`
       plot_cone (bool): plot cone of influence or not
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
       xlabel (str): The x-axis label
       ylabel (str): The y-axis label
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 15:50:16,560 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:16: input:
.. autofunction:: pyleoclim.Spectral.plot_wwadist

2017-07-18 15:50:16,576 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_wwadist
2017-07-18 15:50:16,590 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:50:16,603 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:50:16,618 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_wwadist')
2017-07-18 15:50:16,633 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_wwadist at 0x1253f1378>
2017-07-18 15:50:16,664 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_wwadist', <function plot_wwadist at 0x1253f1378>, {}, ['Plot t
2017-07-18 15:50:16,687 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_wwadist(wwa, ylim=None)
   :module: pyleoclim.Spectral

   Plot the distribution of wwa with the 95% quantile line.
   
   Args:
       wwa (array): the weighted wavelet amplitude.
       ylim (list): limitations for y-axis
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 15:50:16,714 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:18: input:
.. autofunction:: pyleoclim.Spectral.plot_psd
2017-07-18 15:50:16,728 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_psd
2017-07-18 15:50:16,747 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:50:16,762 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:50:16,778 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_psd')
2017-07-18 15:50:16,795 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_psd at 0x1253f1400>
2017-07-18 15:50:16,810 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_psd', <function plot_psd at 0x1253f1400>, {}, ['Plot the wavel
2017-07-18 15:50:16,826 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_psd(psd, freqs, lmstyle=None, linewidth=None, xticks=None, xlim=None, ylim=None, figsize=[20, 8], label='PSD', plot_ar1=True, psd_ar1_q95=None, psd_ar1_color='#d9544d', ax=None, xlabel='Period', ylabel='Spectral Density')
   :module: pyleoclim.Spectral

   Plot the wavelet amplitude
   
   Args:
       psd (array): power spectral density
       freqs (array): vector of frequency
       xticks (list): ticks on x-axis
       xlim (list): limits for x-axis
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
       xlabel (str): The x-axis label
       ylabel (str): The y-axis label
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 15:50:16,871 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.ar1_fit:7: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:16,886 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.ar1_sim:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:16,903 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz:13: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:16,916 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz:15: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:16,932 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz_psd:12: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:16,946 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz_psd:14: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:16,965 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "spectral functions"...>>,)
2017-07-18 15:50:16,998 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 77%] [35mStats[39;49;00m                                                 
2017-07-18 15:50:17,012 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>, 'Stats')
2017-07-18 15:50:17,033 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Stats', ['Statistics Functions\n====================\n\n.. autofunction:: pyleoclim.Stats.simpleSt
2017-07-18 15:50:17,075 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Stats.rst:4: input:
.. autofunction:: pyleoclim.Stats.simpleStats

2017-07-18 15:50:17,097 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Stats import simpleStats
2017-07-18 15:50:17,112 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Stats
2017-07-18 15:50:17,128 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Stats' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py'>
2017-07-18 15:50:17,142 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'simpleStats')
2017-07-18 15:50:17,157 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function simpleStats at 0x1253f1510>
2017-07-18 15:50:17,224 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Stats.simpleStats', <function simpleStats at 0x1253f1510>, {}, ['Computes si
2017-07-18 15:50:17,238 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: simpleStats(y, axis=None)
   :module: pyleoclim.Stats

   Computes simple statistics
   
   Computes the mean, median, min, max, standard deviation, and interquartile
   range of a numpy array y.
   
   Args:
       y (array): A Numpy array
       axis (int, typle of ints): Optional. Axis or Axes along which the means
           are computed, the default is to compute the mean of the flattened
           array. If a tuple of ints, performed over multiple axes
   
   Returns:
       The mean, median, min, max, standard deviation and IQR by columns
   
   
2017-07-18 15:50:17,255 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:17,279 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Stats.rst:6: input:
.. autofunction:: pyleoclim.Stats.corrsig
2017-07-18 15:50:17,293 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Stats import corrsig
2017-07-18 15:50:17,309 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Stats
2017-07-18 15:50:17,328 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Stats' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py'>
2017-07-18 15:50:17,382 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'corrsig')
2017-07-18 15:50:17,408 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function corrsig at 0x125413620>
2017-07-18 15:50:17,437 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Stats.corrsig', <function corrsig at 0x125413620>, {}, ['Estimates the signi
2017-07-18 15:50:17,455 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: corrsig(y1, y2, nsim=1000, method='isospectral', alpha=0.5)
   :module: pyleoclim.Stats

   Estimates the significance of correlations between non IID time series by 3 independent methods:
       1) 'ttest': T-test where d.o.f are corrected for the effect of serial correlation
       2) 'isopersistent': AR(1) modeling of x and y.
       3) 'isospectral': phase randomization of original inputs. (default)
       The T-test is parametric test, hence cheap but usually wrong except in idyllic circumstances.
       The others are non-parametric, but their computational requirements scales with nsim.
   
   Args:
       y1, y2 (array)- vector of (real) numbers of identical length, no NaNs allowed
       nsim (int)- the number of simulations [1000]
       method (str)- methods 1-3 above ['isospectral']
       alpha (float)- significance level for critical value estimation [0.05]
   
   Returns:
        r (real): correlation between x and y 
   
        signif (int): true  if significant; false otherwise 
   
        p (real): Fraction of time series with higher correlation coefficents than observed (approximates the p-value). 
   
           Note that signif = True if and only if p <= alpha.
   
2017-07-18 15:50:17,492 [WARNING] sphinx.util.docutils: Enumerated list ends without a blank line; unexpected unindent.
2017-07-18 15:50:17,526 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py:docstring of pyleoclim.Stats.simpleStats:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:17,541 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py:docstring of pyleoclim.Stats.corrsig:4: (WARNING/2) Enumerated list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:17,557 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "statistics functions"...>>,)
2017-07-18 15:50:17,596 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 88%] [35mSummaryPlots[39;49;00m                                          
2017-07-18 15:50:17,614 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>, 'SummaryPlots')
2017-07-18 15:50:17,634 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('SummaryPlots', ['Summary Plots\n==============\n\nThis module handles some basic return for the su
2017-07-18 15:50:17,651 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:8: input:
.. autofunction:: pyleoclim.SummaryPlots.getMetadata

2017-07-18 15:50:17,672 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import getMetadata
2017-07-18 15:50:17,698 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 15:50:17,733 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 15:50:17,760 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'getMetadata')
2017-07-18 15:50:17,778 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function getMetadata at 0x1244e2f28>
2017-07-18 15:50:17,843 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.getMetadata', <function getMetadata at 0x1244e2f28>, {}, ['Get 
2017-07-18 15:50:17,864 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: getMetadata(timeseries)
   :module: pyleoclim.SummaryPlots

   Get the necessary metadata to be printed out automatically
   
   Args:
       timeseries: a specific timeseries object. 
       
   Returns:
       A dictionary containing the following metadata:
   
       archiveType 
   
       Authors (if more than 2, replace by et al. 
   
       PublicationYear 
   
       Publication DOI 
   
       Variable Name 
   
       Units 
   
       Climate Interpretation 
   
       Calibration Equation 
   
       Calibration References 
   
       Calibration Notes 
   
       
   
2017-07-18 15:50:17,887 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:10: input:
.. autofunction:: pyleoclim.SummaryPlots.TsData

2017-07-18 15:50:17,912 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import TsData
2017-07-18 15:50:17,942 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 15:50:17,962 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 15:50:17,985 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'TsData')
2017-07-18 15:50:18,008 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function TsData at 0x1244eb048>
2017-07-18 15:50:18,028 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.TsData', <function TsData at 0x1244eb048>, {}, ['Get the PaleoD
2017-07-18 15:50:18,079 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: TsData(timeseries, x_axis='')
   :module: pyleoclim.SummaryPlots

   Get the PaleoData with age/depth information
       
   Get the necessary information for the TS plots/necessary to allow for
   axes specification
   
   Args:
       timeseries: a single timeseries object. 
           By default, will prompt the user
       x-axis (str): The representation against which to plot the 
           paleo-data. Options are "age", "year", and "depth". 
           Default is to let the system choose if only one available 
           or prompt the user.
   Returns:
       x - the x-valus 
   
       y - the y-values 
   
       archiveType - the archiveType (for plot settings) 
   
       x_label - the label for the x-axis 
   
       y_label - the label for the y-axis 
   
       label - the results of the x-axis query. Either depth, year, or age
       
   
2017-07-18 15:50:18,121 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:12: input:
.. autofunction:: pyleoclim.SummaryPlots.agemodelData
2017-07-18 15:50:18,136 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import agemodelData
2017-07-18 15:50:18,150 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 15:50:18,169 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 15:50:18,193 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'agemodelData')
2017-07-18 15:50:18,224 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function agemodelData at 0x1244eb0d0>
2017-07-18 15:50:18,244 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.agemodelData', <function agemodelData at 0x1244eb0d0>, {}, ['Ge
2017-07-18 15:50:18,260 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: agemodelData(timeseries)
   :module: pyleoclim.SummaryPlots

   Get the necessary information for the agemodel plot
   
   Args:
       timeseries: a single timeseries object. By default, will
           prompt the user
   
   Returns:
       depth - the depth values 
   
       age - the age values 
   
       x_label - the label for the x-axis 
   
       y_label - the label for the y-axis 
   
       archiveType - the archiveType (for default plot settings)
   
   
2017-07-18 15:50:18,311 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "summary plots"...>>,)
2017-07-18 15:50:18,334 [INFO] sphinx.util: [01mreading sources... [39;49;00m[100%] [35mTimeseries[39;49;00m                                            
2017-07-18 15:50:18,350 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>, 'Timeseries')
2017-07-18 15:50:18,372 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Timeseries', ['Timeseries Functions\n====================\n\nThis module allows the manipulation o
2017-07-18 15:50:18,390 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:6: input:
.. autofunction:: pyleoclim.Timeseries.bin

2017-07-18 15:50:18,406 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import bin
2017-07-18 15:50:18,420 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 15:50:18,435 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 15:50:18,448 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'bin')
2017-07-18 15:50:18,463 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function bin at 0x1253ebb70>
2017-07-18 15:50:18,525 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.bin', <function bin at 0x1253ebb70>, {}, ['Bin the values', '', '
2017-07-18 15:50:18,541 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: bin(x, y, bin_size='', start='', end='')
   :module: pyleoclim.Timeseries

   Bin the values
   
   Args:
       x (array): the x-axis series.
       y (array): the y-axis series.
       bin_size (float): The size of the bins. Default is the average resolution
       start (float): Where/when to start binning. Default is the minimum
       end (float): When/where to stop binning. Defulat is the maximum
   
   Returns:
       binned_values - the binned output 
   
       bins - the bins (centered on the median, i.e., the 100-200 bin is 150) 
   
       n - number of data points in each bin 
   
       error -  the standard error on the mean in each bin
   
   
2017-07-18 15:50:18,562 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:8: input:
.. autofunction:: pyleoclim.Timeseries.interp

2017-07-18 15:50:18,587 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import interp
2017-07-18 15:50:18,601 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 15:50:18,618 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 15:50:18,632 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'interp')
2017-07-18 15:50:18,649 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function interp at 0x1253ebc80>
2017-07-18 15:50:18,663 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.interp', <function interp at 0x1253ebc80>, {}, ['Linear interpola
2017-07-18 15:50:18,681 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: interp(x, y, interp_step='', start='', end='')
   :module: pyleoclim.Timeseries

   Linear interpolation onto a new x-axis
   
   Args:
       x (array): the x-axis
       y (array): the y-axis
       interp_step (float): the interpolation step. Default is mean resolution.
       start (float): where/when to start the interpolation. Default is min..
       end (float): where/when to stop the interpolation. Defaul is max.
   
   Returns:
       xi - the interpolated x-axis 
   
       interp_values - the interpolated values
    
   
2017-07-18 15:50:18,699 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:10: input:
.. autofunction:: pyleoclim.Timeseries.onCommonAxis

2017-07-18 15:50:18,719 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import onCommonAxis
2017-07-18 15:50:18,736 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 15:50:18,757 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 15:50:18,780 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'onCommonAxis')
2017-07-18 15:50:18,805 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function onCommonAxis at 0x1253ebd08>
2017-07-18 15:50:18,824 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.onCommonAxis', <function onCommonAxis at 0x1253ebd08>, {}, ['Plac
2017-07-18 15:50:18,840 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: onCommonAxis(x1, y1, x2, y2, interp_step='', start='', end='')
   :module: pyleoclim.Timeseries

   Places two timeseries on a common axis
   
   Args:
       x1 (array): x-axis values of the first timeseries
       y1 (array): y-axis values of the first timeseries
       x2 (array): x-axis values of the second timeseries
       y2 (array): y-axis values of the second timeseries
       interp_step (float): The interpolation step. Default is mean resolution
           of lowest resolution series
       start (float): where/when to start. Default is the maximum of the minima of
           the two timeseries
       end (float): Where/when to end. Default is the minimum of the maxima of
           the two timeseries
   
   Returns:
       xi -  the interpolated x-axis 
   
       interp_values1 -  the interpolated y-values for the first timeseries
       interp_values2 - the intespolated y-values for the second timeseries
   
2017-07-18 15:50:18,860 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:50:18,877 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:50:18,917 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:12: input:
.. autofunction:: pyleoclim.Timeseries.standardize
2017-07-18 15:50:18,955 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import standardize
2017-07-18 15:50:18,975 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 15:50:18,998 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 15:50:19,048 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'standardize')
2017-07-18 15:50:19,064 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function standardize at 0x1253ebd90>
2017-07-18 15:50:19,086 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.standardize', <function standardize at 0x1253ebd90>, {}, ['Center
2017-07-18 15:50:19,103 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: standardize(x, scale=1, axis=0, ddof=0, eps=0.001)
   :module: pyleoclim.Timeseries

   Centers and normalizes a given time series. Constant or nearly constant time series not rescaled.
   
   Args:
       x (array): vector of (real) numbers as a time series, NaNs allowed
       scale (real): a scale factor used to scale a record to a match a given variance
       axis (int or None): axis along which to operate, if None, compute over the whole array
       ddof (int): degress of freedom correction in the calculation of the standard deviation
       eps (real): a threshold to determine if the standard deviation is too close to zero
   
   Returns:
       z (array): the standardized time series (z-score), Z = (X - E[X])/std(X)*scale, NaNs allowed
       mu (real): the mean of the original time series, E[X]
       sig (real): the standard deviation of the original time series, std[X]
   
   References:
       1. Tapio Schneider's MATLAB code: http://www.clidyn.ethz.ch/imputation/standardize.m
       2. The zscore function in SciPy: https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py
   
   @author: fzhu
   
2017-07-18 15:50:19,136 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py:docstring of pyleoclim.Timeseries.onCommonAxis:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:50:19,152 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py:docstring of pyleoclim.Timeseries.onCommonAxis:10: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:50:19,166 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "timeseries functions"...>>,)
2017-07-18 15:50:19,194 [INFO] sphinx.util: 
2017-07-18 15:50:19,211 [DEBUG] sphinx.application: [app] emitting event: 'env-updated'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>,)
2017-07-18 15:50:07,018 [WARNING] sphinx.util.docutils: Literal block expected; none found.
2017-07-18 15:50:19,241 [INFO] sphinx.builders: [01mlooking for now-outdated files... [39;49;00m
2017-07-18 15:50:19,257 [DEBUG] sphinx.application: [app] emitting event: 'env-get-updated'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>,)
2017-07-18 15:50:19,275 [INFO] sphinx.builders: none found
2017-07-18 15:50:19,297 [INFO] sphinx.builders: [01mpickling environment... [39;49;00m
2017-07-18 15:50:19,319 [INFO] sphinx.builders: done
2017-07-18 15:50:19,353 [INFO] sphinx.builders: [01mchecking consistency... [39;49;00m
2017-07-18 15:50:19,404 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,484 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,540 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,563 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,593 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,623 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,641 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,661 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,699 [WARNING] sphinx.environment: document isn't included in any toctree
2017-07-18 15:50:19,733 [DEBUG] sphinx.application: [app] emitting event: 'env-check-consistency'(<sphinx.environment.BuildEnvironment object at 0x112335fd0>,)
2017-07-18 15:50:19,772 [INFO] sphinx.builders: done
2017-07-18 15:50:19,794 [DEBUG] sphinx.builders: docnames to write: Introduction, LipdUtils, Main, Map, Plot, Spectral, Stats, SummaryPlots, Timeseries
2017-07-18 15:50:19,821 [INFO] sphinx.builders: [01mpreparing documents... [39;49;00m
2017-07-18 15:50:19,851 [INFO] sphinx.builders: done
2017-07-18 15:50:19,871 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 10%] [32mIntroduction[39;49;00m                                           
2017-07-18 15:50:19,888 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "pyleoclim"...>>, 'Introduction')
2017-07-18 15:50:20,090 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 20%] [32mLipdUtils[39;49;00m                                              
2017-07-18 15:50:20,143 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "lipd utilities"...>>, 'LipdUtils')
2017-07-18 15:50:20,198 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 30%] [32mMain[39;49;00m                                                   
2017-07-18 15:50:20,230 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "main functions"...>>, 'Main')
2017-07-18 15:50:20,345 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 40%] [32mMap[39;49;00m                                                    
2017-07-18 15:50:20,392 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "mapping functions"...>>, 'Map')
2017-07-18 15:50:20,534 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 50%] [32mPlot[39;49;00m                                                   
2017-07-18 15:50:20,561 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "plotting functions"...>>, 'Plot')
2017-07-18 15:50:20,694 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 60%] [32mSpectral[39;49;00m                                               
2017-07-18 15:50:20,719 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "spectral functions"...>>, 'Spectral')
2017-07-18 15:50:20,825 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 70%] [32mStats[39;49;00m                                                  
2017-07-18 15:50:20,863 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "statistics functions"...>>, 'Stats')
2017-07-18 15:50:20,959 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 80%] [32mSummaryPlots[39;49;00m                                           
2017-07-18 15:50:20,992 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "summary plots"...>>, 'SummaryPlots')
2017-07-18 15:50:21,056 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 90%] [32mTimeseries[39;49;00m                                             
2017-07-18 15:50:21,078 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "timeseries functions"...>>, 'Timeseries')
2017-07-18 15:50:21,145 [INFO] sphinx.util: [01mwriting output... [39;49;00m[100%] [32mindex[39;49;00m                                                  
2017-07-18 15:50:21,167 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <comment...><section "welcome to pyleoclim's documentati ...>, 'index')
2017-07-18 15:50:21,207 [INFO] sphinx.util: 
2017-07-18 15:50:21,224 [INFO] sphinx.builders.html: [01mgenerating indices...[39;49;00m
2017-07-18 15:50:21,244 [INFO] sphinx.builders.html:  genindex
2017-07-18 15:50:21,300 [INFO] sphinx.builders.html: 
2017-07-18 15:50:21,315 [DEBUG] sphinx.application: [app] emitting event: 'html-collect-pages'()
2017-07-18 15:50:21,338 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 12%] [34;01mpyleoclim.Spectral[39;49;00m                           
2017-07-18 15:50:21,953 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 25%] [34;01mpyleoclim[39;49;00m                                    
2017-07-18 15:50:22,600 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 37%] [34;01mpyleoclim.LipdUtils[39;49;00m                          
2017-07-18 15:50:22,678 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 50%] [34;01mpyleoclim.Plot[39;49;00m                               
2017-07-18 15:50:22,813 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 62%] [34;01mpyleoclim.Map[39;49;00m                                
2017-07-18 15:50:22,914 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 75%] [34;01mpyleoclim.Timeseries[39;49;00m                         
2017-07-18 15:50:23,004 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 87%] [34;01mpyleoclim.Stats[39;49;00m                              
2017-07-18 15:50:23,096 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[100%] [34;01mpyleoclim.SummaryPlots[39;49;00m                       
2017-07-18 15:50:23,204 [INFO] sphinx.util: 
2017-07-18 15:50:23,257 [INFO] sphinx.builders.html: [01mwriting additional pages...[39;49;00m
2017-07-18 15:50:23,280 [INFO] sphinx.builders.html:  search
2017-07-18 15:50:23,331 [INFO] sphinx.builders.html: 
2017-07-18 15:50:23,356 [INFO] sphinx.builders.html: [01mcopying static files... [39;49;00m
2017-07-18 15:50:23,648 [INFO] sphinx.builders.html: done
2017-07-18 15:50:23,673 [INFO] sphinx.builders.html: [01mcopying extra files... [39;49;00m
2017-07-18 15:50:23,702 [INFO] sphinx.builders.html: done
2017-07-18 15:50:23,734 [INFO] sphinx.builders.html: [01mdumping search index in English (code: en) ... [39;49;00m
2017-07-18 15:50:23,814 [INFO] sphinx.builders.html: done
2017-07-18 15:50:23,858 [INFO] sphinx.builders.html: [01mdumping object inventory... [39;49;00m
2017-07-18 15:50:23,924 [INFO] sphinx.builders.html: done
2017-07-18 15:50:23,960 [INFO] sphinx.application: [01mbuild succeeded, 10 warnings.[39;49;00m
2017-07-18 15:50:23,994 [DEBUG] sphinx.application: [app] emitting event: 'build-finished'(None,)
2017-07-18 15:53:40,336 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:40,337 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'createDir')
2017-07-18 15:53:40,352 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function createDir at 0x12302c950>
2017-07-18 15:53:40,393 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.createDir', <function createDir at 0x12302c950>, {}, ['Create a ne
2017-07-18 15:53:40,407 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: createDir(path, foldername)
   :module: pyleoclim.LipdUtils

   Create a new folder in a working directory
   
   Create a new folder in a working directory to save outputs from Pyleoclim.
   
   Args:
       path(str): the path to the new folder.
       foldername(str): the name of the folder to be created
       
   Returns:
       newdir - the full path to the new directory
       
   
2017-07-18 15:53:40,475 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:11: input:
.. autofunction:: pyleoclim.LipdUtils.saveFigure

2017-07-18 15:53:40,494 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import saveFigure
2017-07-18 15:53:40,508 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:40,522 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:40,540 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'saveFigure')
2017-07-18 15:53:40,553 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function saveFigure at 0x12302c9d8>
2017-07-18 15:53:40,568 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.saveFigure', <function saveFigure at 0x12302c9d8>, {}, ['Save a fi
2017-07-18 15:53:40,582 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: saveFigure(name, format='eps', dir='')
   :module: pyleoclim.LipdUtils

   Save a figure
   
   Save the figure in the directory. If not given, creates a folder in the 
   current working directory. 
   
   Args:
       name (str): name of the file
       format (str): One of the file extensions supported by the active 
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
       dir (str): the name of the folder in the LiPD working directory.
           If not provided, creates a default folder called 'figures'.
           
   
2017-07-18 15:53:40,600 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:40,615 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:40,639 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:16: input:
.. autofunction:: pyleoclim.LipdUtils.enumerateLipds

2017-07-18 15:53:40,653 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import enumerateLipds
2017-07-18 15:53:40,668 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:40,683 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:40,702 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'enumerateLipds')
2017-07-18 15:53:40,716 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function enumerateLipds at 0x12302ca60>
2017-07-18 15:53:40,735 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.enumerateLipds', <function enumerateLipds at 0x12302ca60>, {}, ['E
2017-07-18 15:53:40,752 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: enumerateLipds(lipds)
   :module: pyleoclim.LipdUtils

   Enumerate the LiPD files loaded in the workspace
   
   Args:
       lipds (dict): A dictionary of LiPD files. Can be obtained from
           pyleoclim.readLipd()
   
   
2017-07-18 15:53:40,772 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:18: input:
.. autofunction:: pyleoclim.LipdUtils.promptForLipd

2017-07-18 15:53:40,786 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import promptForLipd
2017-07-18 15:53:40,799 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:40,813 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:40,831 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'promptForLipd')
2017-07-18 15:53:40,848 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function promptForLipd at 0x12302cae8>
2017-07-18 15:53:40,861 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.promptForLipd', <function promptForLipd at 0x12302cae8>, {}, ['Pro
2017-07-18 15:53:40,876 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: promptForLipd(lipds)
   :module: pyleoclim.LipdUtils

   Prompt for a LiPD file
   
   Ask the user to select a LiPD file from a list
   Use this function in conjunction with enumerateLipds()
   
   Args:
       lipds (dict): A dictionary of LiPD files. Can be obtained from
           pyleoclim.readLipd()
   
   Returns:
       The index of the LiPD file
       
   
2017-07-18 15:53:40,899 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:23: input:
.. autofunction:: pyleoclim.LipdUtils.promptForVariable

2017-07-18 15:53:40,916 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import promptForVariable
2017-07-18 15:53:40,960 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:40,983 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:40,999 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'promptForVariable')
2017-07-18 15:53:41,014 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function promptForVariable at 0x12302cb70>
2017-07-18 15:53:41,032 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.promptForVariable', <function promptForVariable at 0x12302cb70>, {
2017-07-18 15:53:41,049 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: promptForVariable()
   :module: pyleoclim.LipdUtils

   Prompt for a specific variable
   
   Ask the user to select the variable they are interested in.
   Use this function in conjunction with readHeaders() or getTSO()
   
   Returns:
       The index of the variable
       
   
2017-07-18 15:53:41,069 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:25: input:
.. autofunction:: pyleoclim.LipdUtils.xAxisTs

2017-07-18 15:53:41,087 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import xAxisTs
2017-07-18 15:53:41,102 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:41,116 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:41,135 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'xAxisTs')
2017-07-18 15:53:41,153 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function xAxisTs at 0x12302cbf8>
2017-07-18 15:53:41,171 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.xAxisTs', <function xAxisTs at 0x12302cbf8>, {}, ['Prompt the user
2017-07-18 15:53:41,199 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: xAxisTs(timeseries)
   :module: pyleoclim.LipdUtils

   Prompt the user to choose a x-axis representation for the timeseries.
   
   Args:
       timeseries: a timeseries object
       
   Returns:
       x_axis - the values for the x-axis representation, 
   
       label - returns either "age", "year", or "depth"
       
   
2017-07-18 15:53:41,222 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:27: input:
.. autofunction:: pyleoclim.LipdUtils.checkXaxis

2017-07-18 15:53:41,240 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import checkXaxis
2017-07-18 15:53:41,256 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:41,272 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:41,287 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'checkXaxis')
2017-07-18 15:53:41,301 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function checkXaxis at 0x12302cc80>
2017-07-18 15:53:41,317 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.checkXaxis', <function checkXaxis at 0x12302cc80>, {}, ['Check tha
2017-07-18 15:53:41,331 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: checkXaxis(timeseries, x_axis='')
   :module: pyleoclim.LipdUtils

   Check that a x-axis is present for the timeseries
   
   Args:
       timeseries : a timeseries
       x_axis (str) : the x-axis representation, either depth, age or year
       
   Returns:
       x - the values for the x-axis representation, 
   
       label - returns either "age", "year", or "depth"    
   
   
2017-07-18 15:53:41,356 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:32: input:
.. autofunction:: pyleoclim.LipdUtils.enumerateTs

2017-07-18 15:53:41,373 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import enumerateTs
2017-07-18 15:53:41,387 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:41,405 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:41,426 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'enumerateTs')
2017-07-18 15:53:41,467 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function enumerateTs at 0x12302cd08>
2017-07-18 15:53:41,482 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.enumerateTs', <function enumerateTs at 0x12302cd08>, {}, ['Enumera
2017-07-18 15:53:41,497 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: enumerateTs(timeseries_list)
   :module: pyleoclim.LipdUtils

   Enumerate the available time series objects
   
   Args:
       timeseries_list: a  list of available timeseries objects. 
           To use the timeseries loaded upon initiation of the 
           pyleoclim package, use pyleo.time_series.
           
   
2017-07-18 15:53:41,517 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:34: input:
.. autofunction:: pyleoclim.LipdUtils.getTs

2017-07-18 15:53:41,532 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import getTs
2017-07-18 15:53:41,550 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:41,567 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:41,585 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'getTs')
2017-07-18 15:53:41,601 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function getTs at 0x12302cd90>
2017-07-18 15:53:41,614 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.getTs', <function getTs at 0x12302cd90>, {}, ['Get a specific time
2017-07-18 15:53:41,627 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: getTs(timeseries_list)
   :module: pyleoclim.LipdUtils

   Get a specific timeseries object from a dictionary of timeseries
   
   Args:
       timeseries_list: a  list of available timeseries objects. 
           To use the timeseries loaded upon initiation of the 
           pyleoclim package, use pyleo.time_series.
           
   Returns:
       A single timeseries object 
       
   
2017-07-18 15:53:41,649 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:39: input:
.. autofunction:: pyleoclim.LipdUtils.LipdToOntology
2017-07-18 15:53:41,668 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import LipdToOntology
2017-07-18 15:53:41,685 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 15:53:41,700 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 15:53:41,714 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'LipdToOntology')
2017-07-18 15:53:41,729 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function LipdToOntology at 0x12302ce18>
2017-07-18 15:53:41,745 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.LipdToOntology', <function LipdToOntology at 0x12302ce18>, {}, ['s
2017-07-18 15:53:41,764 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: LipdToOntology(archiveType)
   :module: pyleoclim.LipdUtils

   standardize archiveType
   
   Transform the archiveType from their LiPD name to their ontology counterpart
   
   Args:
       archiveType (STR): name of the archiveType from the LiPD file
       
   Returns:
       archiveType according to the ontology
       
   
2017-07-18 15:53:41,796 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py:docstring of pyleoclim.LipdUtils.saveFigure:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:41,815 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py:docstring of pyleoclim.LipdUtils.saveFigure:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:41,835 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "lipd utilities"...>>,)
2017-07-18 15:53:41,875 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 30%] [35mMain[39;49;00m                                                  
2017-07-18 15:53:41,889 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>, 'Main')
2017-07-18 15:53:41,908 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Main', ['Main Functions\n==============\n\n\nUsing Pyleoclim with a LiPD file\n"""""""""""""""""""
2017-07-18 15:53:41,938 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:27: input:
.. autofunction:: pyleoclim.readLipd
2017-07-18 15:53:41,972 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import readLipd
2017-07-18 15:53:41,988 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:42,004 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:42,019 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'readLipd')
2017-07-18 15:53:42,034 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function readLipd at 0x12302cea0>
2017-07-18 15:53:42,350 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.readLipd', <function readLipd at 0x12302cea0>, {}, ['Read Lipd files into a 
2017-07-18 15:53:42,364 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: readLipd(usr_path='')
   :module: pyleoclim

   Read Lipd files into a dictionary
   
   This function is based on the function of the same name in the LiPD utilities.
   Sets the dictionary as global variable so that it doesn't have to be provided
   as an argument for every function.
   
   Args:
       usr_path (str): The path to a directory or a single file. (Optional argument)
       
   Returns:
       lipd_dict - a dictionary containing the LiPD library
   
   
2017-07-18 15:53:42,383 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:28: input:
.. autofunction:: pyleoclim.extractTs

2017-07-18 15:53:42,399 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import extractTs
2017-07-18 15:53:42,416 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:42,437 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:42,452 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'extractTs')
2017-07-18 15:53:42,467 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function extractTs at 0x124005ea0>
2017-07-18 15:53:42,485 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.extractTs', <function extractTs at 0x124005ea0>, {}, ['Extract timeseries di
2017-07-18 15:53:42,505 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: extractTs(lipds=None)
   :module: pyleoclim

   Extract timeseries dictionary
   
   This function is based on the function of the same name in the LiPD utilities.
   Set the dictionary as a global variable so that it doesn't have to be
   provided as an argument for every function. 
   
   Args:
       lipds (dict): A dictionary of LiPD files obtained through the 
       readLipd function
   
   Returns:
       ts_list - A list of timeseries object
   
   
2017-07-18 15:53:42,541 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:32: input:
.. autofunction:: pyleoclim.mapAllArchive

2017-07-18 15:53:42,557 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import mapAllArchive
2017-07-18 15:53:42,571 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:42,586 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:42,603 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapAllArchive')
2017-07-18 15:53:42,621 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapAllArchive at 0x124005f28>
2017-07-18 15:53:42,639 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.mapAllArchive', <function mapAllArchive at 0x124005f28>, {}, ['Map all the a
2017-07-18 15:53:42,653 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapAllArchive(lipds='', markersize=50, background='shadedrelief', figsize=[10, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Map all the available records loaded into the workspace by archiveType.
   
   Map of all the records into the workspace by archiveType.
       Uses the default color palette. Enter pyleoclim.plot_default for detail.
   
   Args:
       lipds (dict): A dictionary of LiPD files. (Optional)
       markersize (int): The size of the markers. Default is 50
       background (str): Plots one of the following images on the map:
           bluemarble, etopo, shadedrelief, or none (filled continents).
           Default is shadedrelief.
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)     
       saveFig (bool): Default is to not save the figure
       dir (str): The absolute path of the directory in which to save the
           figure. If not provided, creates a default folder called 'figures'
           in the LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
2017-07-18 15:53:42,671 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:42,684 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:42,699 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:42,713 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:42,736 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:34: input:
.. autofunction:: pyleoclim.mapLipd

2017-07-18 15:53:42,753 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import mapLipd
2017-07-18 15:53:42,768 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:42,783 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:42,798 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapLipd')
2017-07-18 15:53:42,813 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapLipd at 0x124008048>
2017-07-18 15:53:42,833 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.mapLipd', <function mapLipd at 0x124008048>, {}, ['Create a Map for a single
2017-07-18 15:53:42,848 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapLipd(timeseries='', countries=True, counties=False, rivers=False, states=False, background='shadedrelief', scale=0.5, markersize=50, marker='default', figsize=[4, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Create a Map for a single record
   
   Orthographic projection map of a single record.
   
   Args:
       timeseries: a LiPD timeseries object. Will prompt for one if not given
       countries (bool): Draws the country borders. Default is on (True).
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders.
           Default is off (False)
       background (str): Plots one of the following images on the map:
           bluemarble, etopo, shadedrelief, or none (filled continents).
           Default is shadedrelief
       scale (float): useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       markersize (int): default is 50
       marker (str): a string (or list) containing the color and shape of the
           marker. Default is by archiveType. Type pyleo.plot_default to see
           the default palette.
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
   
2017-07-18 15:53:42,864 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:42,878 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:42,894 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:42,908 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:42,928 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:42,944 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:42,970 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,004 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:38: input:
.. autofunction:: pyleoclim.plotTs

2017-07-18 15:53:43,038 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import plotTs
2017-07-18 15:53:43,056 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:43,071 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:43,086 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plotTs')
2017-07-18 15:53:43,112 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plotTs at 0x1240080d0>
2017-07-18 15:53:43,145 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.plotTs', <function plotTs at 0x1240080d0>, {}, ['Plot a single time series.'
2017-07-18 15:53:43,175 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plotTs(timeseries='', x_axis='', markersize=50, marker='default', figsize=[10, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Plot a single time series.
   
   Args:
       A timeseries: By default, will prompt the user for one.
       x_axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       markersize (int): default is 50.
       marker (str): a string (or list) containing the color and shape of the
           marker. Default is by archiveType. Type pyleo.plot_default to see
           the default palette.
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure.
   
   
2017-07-18 15:53:43,205 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,238 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,253 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,270 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,286 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,306 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,347 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:40: input:
.. autofunction:: pyleoclim.histTs

2017-07-18 15:53:43,387 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import histTs
2017-07-18 15:53:43,405 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:43,424 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:43,448 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'histTs')
2017-07-18 15:53:43,469 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function histTs at 0x124008158>
2017-07-18 15:53:43,487 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.histTs', <function histTs at 0x124008158>, {}, ['Plot a univariate distribut
2017-07-18 15:53:43,505 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: histTs(timeseries='', bins=None, hist=True, kde=True, rug=False, fit=None, hist_kws={'label': 'Histogram'}, kde_kws={'label': 'KDE fit'}, rug_kws={'label': 'Rug'}, fit_kws={'label': 'Fit'}, color='default', vertical=False, norm_hist=True, figsize=[5, 5], saveFig=False, format='eps', dir='')
   :module: pyleoclim

   Plot a univariate distribution of the PaleoData values
   
   This function is based on the seaborn displot function, which is
   itself a combination of the matplotlib hist function with the
   seaborn kdeplot() and rugplot() functions. It can also fit
   scipy.stats distributions and plot the estimated PDF over the data.
   
   Args:
       timeseries: A timeseries. By default, will prompt the user for one.
       bins (int): Specification of hist bins following matplotlib(hist),
           or None to use Freedman-Diaconis rule
       hist (bool): Whether to plot a (normed) histogram
       kde (bool): Whether to plot a gaussian kernel density estimate
       rug (bool): Whether to draw a rugplot on the support axis
       fit: Random variable object. An object with fit method, returning
           a tuple that can be passed to a pdf method of positional
           arguments following a grid of values to evaluate the pdf on.
       {hist, kde, rug, fit}_kws: Dictionaries. Keyword arguments for
           underlying plotting functions. If modifying the dictionary, make
           sure the labels "hist", "kde", "rug" and "fit" are still passed.
       color (str): matplotlib color. Color to plot everything but the
           fitted curve in. Default is to use the default paletter for each
           archive type.
       vertical (bool): if True, oberved values are on y-axis.
       norm_hist (bool): If True (default), the histrogram height shows
           a density rather than a count. This is implied if a KDE or
           fitted density is plotted
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns
       fig - The figure
   
   
2017-07-18 15:53:43,529 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,554 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,579 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,606 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,625 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,646 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,660 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,679 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,693 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,713 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:48: input:
.. autofunction:: pyleoclim.summaryTs

2017-07-18 15:53:43,729 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import summaryTs
2017-07-18 15:53:43,749 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:43,777 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:43,799 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'summaryTs')
2017-07-18 15:53:43,815 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function summaryTs at 0x1240081e0>
2017-07-18 15:53:43,835 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.summaryTs', <function summaryTs at 0x1240081e0>, {}, ['Basic summary plot', 
2017-07-18 15:53:43,854 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: summaryTs(timeseries='', x_axis='', saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Basic summary plot
   
   Plots the following information: the time series, a histogram of
   the PaleoData_values, location map, spectral density using the wwz 
   method, and metadata about the record.
   
   Args:
       timeseries: a timeseries object. By default, will prompt for one
       x_axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
   
2017-07-18 15:53:43,874 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,891 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:43,907 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:43,980 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,003 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:53: input:
.. autofunction:: pyleoclim.statsTs

2017-07-18 15:53:44,023 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import statsTs
2017-07-18 15:53:44,055 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:44,079 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:44,098 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'statsTs')
2017-07-18 15:53:44,113 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function statsTs at 0x124008268>
2017-07-18 15:53:44,136 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.statsTs', <function statsTs at 0x124008268>, {}, ['Calculate simple statisti
2017-07-18 15:53:44,164 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: statsTs(timeseries='')
   :module: pyleoclim

   Calculate simple statistics of a timeseries
   
   Args:
       timeseries: sytem will prompt for one if not given
   
   Returns:
       the mean, median, min, max, standard deviation and the
       inter-quartile range (IQR) of a timeseries.
   
   Examples:
       >>> mean, median, min_, max_, std, IQR = pyleo.statsTs(timeseries)
   
   
2017-07-18 15:53:44,202 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:55: input:
.. autofunction:: pyleoclim.corrSigTs

2017-07-18 15:53:44,217 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import corrSigTs
2017-07-18 15:53:44,231 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:44,250 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:44,269 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'corrSigTs')
2017-07-18 15:53:44,285 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function corrSigTs at 0x1240082f0>
2017-07-18 15:53:44,300 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.corrSigTs', <function corrSigTs at 0x1240082f0>, {}, ['Estimates the signifi
2017-07-18 15:53:44,314 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: corrSigTs(timeseries1='', timeseries2='', x_axis='', interp_step='', start='', end='', nsim=1000, method='isospectral', alpha=0.5)
   :module: pyleoclim

   Estimates the significance of correlations between non IID timeseries.
   
   Function written by. F. Zhu.
   
   Args:
       timeseries1, timeseries2: timeseries object. Default is blank.
       x-axis (str): The representation against which to express the
           paleo-data. Options are "age", "year", and "depth".
           Default is to let the system choose if only one available
           or prompt the user.
       interp_step (float): the step size. By default, will prompt the user.
       start (float): Start time/age/depth. Default is the maximum of
           the minima of the two timeseries
       end (float): End time/age/depth. Default is the minimum of the
           maxima of the two timeseries
       nsim (int): the number of simulations. Default is 1000
       method (str): method use to estimate the correlation and significance.
           Available methods include:
               - 'ttest': T-test where the degrees of freedom are corrected for
               the effect of serial correlation 
   
               - 'isopersistant': AR(1) modeling of the two timeseries 
   
               - 'isospectral' (default): phase randomization of original
               inputs.
           The T-test is parametric test, hence cheap but usually wrong
           except in idyllic circumstances.
           The others are non-parametric, but their computational
           requirements scales with nsim.
       alpha (float): significance level for critical value estimation. Default is 0.05
   
   Returns:
       r (float) - correlation between the two timeseries 
   
       sig (bool) -  Returns True if significant, False otherwise 
   
       p (real) - the p-value
   
   
2017-07-18 15:53:44,330 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:44,350 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,367 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:44,382 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,399 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,416 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:44,435 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,460 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,474 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,491 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,510 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:61: input:
.. autofunction:: pyleoclim.binTs

2017-07-18 15:53:44,523 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import binTs
2017-07-18 15:53:44,537 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:44,554 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:44,571 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'binTs')
2017-07-18 15:53:44,586 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function binTs at 0x124008378>
2017-07-18 15:53:44,610 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.binTs', <function binTs at 0x124008378>, {}, ['Bin the paleoData values of t
2017-07-18 15:53:44,623 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: binTs(timeseries='', x_axis='', bin_size='', start='', end='')
   :module: pyleoclim

   Bin the paleoData values of the timeseries
   
   Args:
       timeseries. By default, will prompt the user for one.
       x-axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system  choose if only one available or prompt the user.
       bin_size (float): the size of the bins to be used. By default,
           will prompt for one
       start (float): Start time/age/depth. Default is the minimum
       end (float): End time/age/depth. Default is the maximum
   
   Returns:
       binned_values- the binned output,
   
       bins-  the bins (centered on the median, i.e. the 100-200 bin is 150),
   
       n-  number of data points in each bin,
   
       error- the standard error on the mean in each bin
   
   
   
2017-07-18 15:53:44,642 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:44,690 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,712 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,735 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:63: input:
.. autofunction:: pyleoclim.interpTs

2017-07-18 15:53:44,747 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import interpTs
2017-07-18 15:53:44,763 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:44,780 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:44,796 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'interpTs')
2017-07-18 15:53:44,810 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function interpTs at 0x124008400>
2017-07-18 15:53:44,823 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.interpTs', <function interpTs at 0x124008400>, {}, ['Simple linear interpola
2017-07-18 15:53:44,836 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: interpTs(timeseries='', x_axis='', interp_step='', start='', end='')
   :module: pyleoclim

   Simple linear interpolation
   
   Simple linear interpolation of the data using the numpy.interp method
   
   Args:
       timeseries. Default is blank, will prompt for it
       x-axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       interp_step (float): the step size. By default, will prompt the user.
       start (float): Start year/age/depth. Default is the minimum
       end (float): End year/age/depth. Default is the maximum
   
   Returns:
       interp_age - the interpolated age/year/depth according to the end/start
       and time step, 
   
       interp_values - the interpolated values
   
   
2017-07-18 15:53:44,852 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:44,868 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:44,888 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:65: input:
.. autofunction:: pyleoclim.standardizeTs

2017-07-18 15:53:44,903 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import standardizeTs
2017-07-18 15:53:44,918 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:44,934 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:44,948 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'standardizeTs')
2017-07-18 15:53:44,965 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function standardizeTs at 0x124008488>
2017-07-18 15:53:44,984 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.standardizeTs', <function standardizeTs at 0x124008488>, {}, ['Centers and n
2017-07-18 15:53:44,999 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: standardizeTs(timeseries='', scale=1, ddof=0, eps=0.001)
   :module: pyleoclim

   Centers and normalizes the paleoData values of a  given time series.
   
   Constant or nearly constant time series not rescaled.
   
   Args:
       x (array): vector of (real) numbers as a time series, NaNs allowed
       scale (real): a scale factor used to scale a record to a match a given variance
       axis (int or None): axis along which to operate, if None, compute over the whole array
       ddof (int): degress of freedom correction in the calculation of the standard deviation
       eps (real): a threshold to determine if the standard deviation is too close to zero
   
   Returns:
       - z (array): the standardized time series (z-score), Z = (X - E[X])/std(X)*scale, NaNs allowed 
   
       - mu (real): the mean of the original time series, E[X] 
   
       - sig (real): the standard deviation of the original time series, std[X] 
   
   
   References:
       1. Tapio Schneider's MATLAB code: http://www.clidyn.ethz.ch/imputation/standardize.m
       2. The zscore function in SciPy: https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py
   
   @author: fzhu
   
2017-07-18 15:53:45,022 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:69: input:
.. autofunction:: pyleoclim.wwzTs

2017-07-18 15:53:45,036 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import wwzTs
2017-07-18 15:53:45,051 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 15:53:45,067 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 15:53:45,087 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwzTs')
2017-07-18 15:53:45,103 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwzTs at 0x124008598>
2017-07-18 15:53:45,120 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.wwzTs', <function wwzTs at 0x124008598>, {}, ['Weigthed wavelet Z-transform 
2017-07-18 15:53:45,133 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwzTs(timeseries='', wwz=False, psd=True, wwz_default=True, psd_default=True, wwaplot_default=True, psdplot_default=True, fig=True, saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Weigthed wavelet Z-transform analysis
   
   Wavelet analysis for unevenly spaced data adapted from Foster et al. (1996)
   
   Args:
       timeseries (dict): A LiPD timeseries object (Optional, will prompt for one.)
       wwz (bool): If True, will perform wavelet analysis
       psd (bool): If True, will inform the power spectral density of the timeseries
       wwz_default: If True, will use the following default parameters:
           
           wwz_default = {'tau':None,'freqs':None,'c':1/(8*np.pi**2),'Neff':3,'nMC':200,
                              'nproc':8,'detrend':'no','method':'Kirchner_f2py'}.
               
           Modify the values for specific keys to change the default behavior.
               
       psd_default: If True, will use the following default parameters:
           
           psd_default = {'tau':None,
                         'freqs': None,
                         'c':1e-3,
                         'nproc':8,
                         'nMC':200,
                         'detrend':'no',
                         'Neff':3,
                         'anti_alias':False,
                         'avgs':2,
                         'method':'Kirchner_f2py'}
           
           Modify the values for specific keys to change the default behavior.
           
       wwaplot_default: If True, will use the following default parameters:
           
           wwaplot_default={'Neff':3,
                                'AR1_q':AR1_q,
                                'coi':coi,
                                'levels':None,
                                'tick_range':None,
                                'yticks':None,
                                'ylim':None,
                                'xticks':None,
                                'xlabels':None,
                                'figsize':[20,8],
                                'clr_map':'OrRd',
                                'cbar_drawedges':False,
                                'cone_alpha':0.5,
                                'plot_signif':True,
                                'signif_style':'contour',
                                'plot_cone':True}
           
           Modify the values for specific keys to change the default behavior.
       psdplot_default: If True, will use the following default parameters:
           
           psdplot_default={'lmstyle':None,
                            'linewidth':None,
                            'xticks':None,
                            'xlim':None,
                            'ylim':None,
                            'figsize':[20,8],
                            'label':'PSD',
                            'plot_ar1':True,
                            'psd_ar1_q95':psd_ar1_q95,
                            'psd_ar1_color':sns.xkcd_rgb["pale red"]}
           
           Modify the values for specific keys to change the default behavior.
           
       fig (bool): If True, plots the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
       
   Returns:
       dict_out (dict): A dictionary of outputs. 
           
           For wwz: 
           
           - wwa (array): The weights wavelet amplitude 
       
           - AR1_q (array): AR1 simulations 
       
           - coi (array): cone of influence 
       
           - freqs (array): vector for frequencies 
       
           - tau (array): the evenly-spaced time points, namely the time 
           shift for wavelet analysis. 
       
           - Neffs (array): The matrix of effective number of points in the
           time-scale coordinates.
       
           - coeff (array): The wavelet transform coefficients
       
           For psd: 
           
           - psd (array): power spectral density 
       
           - freqs (array): vector of frequency 
       
           - psd_ar1_q95 (array): the 95% quantile of the psds of AR1 processes 
       
       fig: The figure
        
       References:
           Foster, G. (1996). Wavelets for period analysis of unevenly 
           sampled time series. The Astronomical Journal, 112(4), 1709-1729.
       
       Examples:
           To run both wwz and psd: 
   
           
           >>> dict_out, fig = pyleoclim.wwzTs(wwz=True)
           
           Note: This will return a single figure with wwa and psd 
   
           
           To change a default behavior:
   
           
           >>> dict_out, fig = pyleoclim.wwzTs(psd_default = {'nMC':1000}) 
          
   
2017-07-18 15:53:45,153 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:45,168 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:45,190 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:45,209 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 15:53:45,226 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 15:53:45,306 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,322 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,338 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:16: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,358 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:18: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,383 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,409 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,430 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:17: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,444 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:19: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,460 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:21: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,473 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:24: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,493 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:26: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,506 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:6: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,522 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:8: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,537 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,551 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,567 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:15: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,584 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:17: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,604 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,618 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,635 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:16: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,648 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:18: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,662 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,677 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:26: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,693 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:28: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,712 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:31: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,729 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:33: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,744 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,759 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,774 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:14: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,790 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:16: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,809 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,823 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,841 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:13: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,857 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:14: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,872 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:16: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,886 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:18: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,905 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:20: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,921 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:25: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,936 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:26: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,950 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:30: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,963 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:6: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:45,977 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:8: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:45,994 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:10: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,013 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.interpTs:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:46,033 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.interpTs:10: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,052 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:51: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,070 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:69: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:46,087 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:71: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,105 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:89: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,120 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:92: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,138 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "main functions"...>>,)
2017-07-18 15:53:46,173 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 40%] [35mMap[39;49;00m                                                   
2017-07-18 15:53:46,187 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>, 'Map')
2017-07-18 15:53:46,211 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Map', ['Mapping Functions\n=================\n\nThis module uses the Basemap package for mapping. 
2017-07-18 15:53:46,226 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Map.rst:6: input:
.. autofunction:: pyleoclim.Map.mapAll

2017-07-18 15:53:46,243 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Map import mapAll
2017-07-18 15:53:46,258 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Map
2017-07-18 15:53:46,271 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Map' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Map.py'>
2017-07-18 15:53:46,285 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapAll')
2017-07-18 15:53:46,301 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapAll at 0x10ee71e18>
2017-07-18 15:53:46,357 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Map.mapAll', <function mapAll at 0x10ee71e18>, {}, ['Map the location of all
2017-07-18 15:53:46,372 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapAll(lat, lon, criteria, projection='robin', lat_0='', lon_0='', llcrnrlat=-90, urcrnrlat=90, llcrnrlon=-180, urcrnrlon=180, countries=False, counties=False, rivers=False, states=False, figsize=[10, 4], ax=None, background='none', scale=0.5, palette='', markersize=50)
   :module: pyleoclim.Map

   Map the location of all lat/lon according to some criteria 
   
   Map the location of all lat/lon according to some criteria. The choice of 
   plotting color/marker is passed through palette according to unique 
   criteria (e.g., record name, archive type, proxy observation type).
   
   Args:
       lat (list): a list of latitude.
       lon (list): a list of longitude.
       criteria (list): a list of criteria for plotting purposes. For instance,
           a map by the types of archive present in the dataset or proxy
           observations.
       projection (string): the map projection. Refers to the Basemap
           documentation for a list of available projections. Only projections
           supporting setting the map center with a single lat/lon or with
           the coordinates of the rectangle are currently supported. 
           Default is to use a Robinson projection.
       lat_0, lon_0 (float): the center coordinates for the map. Default is
           mean latitude/longitude in the list. 
           If the chosen projection doesn't support it, Basemap will
           ignore the given values.
       llcrnrlat, urcrnrlat, llcrnrlon, urcrnrlon (float): The coordinates
           of the two opposite corners of the rectangle.
       countries (bool): Draws the countries border. Defaults is off (False). 
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders. 
           Default is off (False).
       background (string): Plots one of the following images on the map: 
           bluemarble, etopo, shadedrelief, or none (filled continents). 
           Default is none.
       scale (float): Useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       palette (dict): A dictionary of plotting color/marker by criteria. The
           keys should correspond to ***unique*** criteria with a list of 
           associated values. The list should be in the format 
           ['color', 'marker'].
       markersize (int): The size of the marker.
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot) 
       
   Returns:
       The figure       
   
2017-07-18 15:53:46,387 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:46,426 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:46,458 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:46,479 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:46,494 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:46,521 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:46,542 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Map.rst:8: input:
.. autofunction:: pyleoclim.Map.mapOne
2017-07-18 15:53:46,558 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Map import mapOne
2017-07-18 15:53:46,574 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Map
2017-07-18 15:53:46,591 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Map' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Map.py'>
2017-07-18 15:53:46,612 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapOne')
2017-07-18 15:53:46,632 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapOne at 0x12302c8c8>
2017-07-18 15:53:46,649 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Map.mapOne', <function mapOne at 0x12302c8c8>, {}, ['Map one location on the
2017-07-18 15:53:46,662 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapOne(lat, lon, projection='ortho', lat_0='', lon_0='', llcrnrlat=-90, urcrnrlat=90, llcrnrlon=-180, urcrnrlon=180, countries=True, counties=False, rivers=False, states=False, background='shadedrelief', scale=0.5, markersize=50, marker='ro', figsize=[4, 4], ax=None)
   :module: pyleoclim.Map

   Map one location on the globe
   
   Args:
       lat (float): a float number representing latitude
       lon (float): a float number representing longitude
       projection (string): the map projection. Refers to the Basemap
           documentation for a list of available projections. Only projections
           supporting setting the map center with a single lat/lon or with
           the coordinates of the rectangle are currently supported. 
           Default is to use a Robinson projection.
       lat_0, lon_0 (float): the center coordinates for the map. Default is
           mean latitude/longitude in the list. 
           If the chosen projection doesn't support it, Basemap will
           ignore the given values.
       llcrnrlat, urcrnrlat, llcrnrlon, urcrnrlon (float): The coordinates
           of the two opposite corners of the rectangle.
       countries (bool): Draws the countries border. Defaults is off (False). 
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders. 
           Default is off (False).
       background (string): Plots one of the following images on the map: 
           bluemarble, etopo, shadedrelief, or none (filled continents). 
           Default is none.
       scale (float): Useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       markersize (int): The size of the marker.
       marker (str or list): color and type of marker. 
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot) 
   
   
2017-07-18 15:53:46,686 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:46,718 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:46,740 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:46,757 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:46,771 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:46,788 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:46,821 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:46,839 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:13: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,858 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,872 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:28: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:46,888 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:29: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,905 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:38: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,923 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:7: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:46,939 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,955 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:17: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,970 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:21: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:46,984 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:22: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:46,997 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:27: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:47,016 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "mapping functions"...>>,)
2017-07-18 15:53:47,041 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 50%] [35mPlot[39;49;00m                                                  
2017-07-18 15:53:47,056 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>, 'Plot')
2017-07-18 15:53:47,074 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Plot', ['Plotting Functions\n==================\n\n.. autofunction:: pyleoclim.Plot.plot\n\n.. aut
2017-07-18 15:53:47,091 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Plot.rst:4: input:
.. autofunction:: pyleoclim.Plot.plot

2017-07-18 15:53:47,106 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Plot import plot
2017-07-18 15:53:47,127 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Plot
2017-07-18 15:53:47,152 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Plot' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py'>
2017-07-18 15:53:47,167 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot')
2017-07-18 15:53:47,180 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot at 0x1230371e0>
2017-07-18 15:53:47,212 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Plot.plot', <function plot at 0x1230371e0>, {}, ['Make a 2-D plot', '', 'Arg
2017-07-18 15:53:47,231 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot(x, y, markersize=50, marker='ro', x_label='', y_label='', title='', figsize=[10, 4], ax=None)
   :module: pyleoclim.Plot

   Make a 2-D plot
   
   Args:
       x (numpy array): a 1xn numpy array of values for the x-axis
       y (numpy array): a 1xn numpy array for the y-axis
       markersize (int): the size of the marker
       marker (string or list): color and shape of the marker
       x_axis_label (str): the label for the x-axis
       y_axis_label (str): the label for the y-axis
       title (str): the title for the plot
       figsize (list): the size of the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
           
   Return:
       The figure       
   
   
2017-07-18 15:53:47,252 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Plot.rst:6: input:
.. autofunction:: pyleoclim.Plot.plot_hist
2017-07-18 15:53:47,267 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Plot import plot_hist
2017-07-18 15:53:47,281 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Plot
2017-07-18 15:53:47,298 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Plot' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py'>
2017-07-18 15:53:47,312 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_hist')
2017-07-18 15:53:47,332 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_hist at 0x123037268>
2017-07-18 15:53:47,350 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Plot.plot_hist', <function plot_hist at 0x123037268>, {}, ['Plot a univariat
2017-07-18 15:53:47,365 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_hist(y, bins=None, hist=True, label='', kde=True, rug=False, fit=None, hist_kws={'label': 'Histogram'}, kde_kws={'label': 'KDE fit'}, rug_kws={'label': 'rug'}, fit_kws={'label': 'fit'}, color='0.7', vertical=False, norm_hist=True, figsize=[5, 5], ax=None)
   :module: pyleoclim.Plot

   Plot a univariate distribution of the PaleoData values
           
   This function is based on the seaborn displot function, which is
   itself a combination of the matplotlib hist function with the 
   seaborn kdeplot() and rugplot() functions. It can also fit 
   scipy.stats distributions and plot the estimated PDF over the data.
       
   Args:
       y (array): nx1 numpy array. No missing values allowed 
       bins (int): Specification of hist bins following matplotlib(hist), 
           or None to use Freedman-Diaconis rule
       hist (bool): Whether to plot a (normed) histogram 
       label (str): The label for the axis
       kde (bool): Whether to plot a gaussian kernel density estimate
       rug (bool): Whether to draw a rugplot on the support axis
       fit: Random variable object. An object with fit method, returning 
           a tuple that can be passed to a pdf method of positional 
           arguments following a grid of values to evaluate the pdf on.
       {hist, kde, rug, fit}_kws: Dictionaries. Keyword arguments for 
           underlying plotting functions. If modifying the dictionary, make
           sure the labels "hist", "kde", "rug" and "fit" are still passed.
       color (str): matplotlib color. Color to plot everything but the
           fitted curve in.
       vertical (bool): if True, oberved values are on y-axis.
       norm_hist (bool): If True (default), the histrogram height shows
           a density rather than a count. This is implied if a KDE or 
           fitted density is plotted
       figsize (list): the size of the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)     
   
   Returns
      fig - The figure
   
2017-07-18 15:53:47,391 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:47,411 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:47,459 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:47,497 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:47,529 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 15:53:47,548 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:47,568 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:47,591 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:47,607 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:47,622 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:17: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:47,652 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:19: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:47,679 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:47,705 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:26: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:47,729 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:28: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:47,752 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "plotting functions"...>>,)
2017-07-18 15:53:47,779 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 60%] [35mSpectral[39;49;00m                                              
2017-07-18 15:53:47,801 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>, 'Spectral')
2017-07-18 15:53:47,829 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Spectral', ['Spectral Functions\n==================\n\nThis module allows analysis in the frequenc
2017-07-18 15:53:47,866 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:6: input:
.. autofunction:: pyleoclim.Spectral.ar1_fit

2017-07-18 15:53:47,885 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import ar1_fit
2017-07-18 15:53:47,906 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:53:47,923 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:53:47,951 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'ar1_fit')
2017-07-18 15:53:47,967 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function ar1_fit at 0x123037378>
2017-07-18 15:53:48,461 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.ar1_fit', <function ar1_fit at 0x123037378>, {}, ['Returns the lag-
2017-07-18 15:53:48,518 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: ar1_fit(ys, ts=None, detrend='no')
   :module: pyleoclim.Spectral

   Returns the lag-1 autocorrelation from ar1 fit OR persistence from tauest.
   
   Args:
       ys (array): the time series
       ts (array): the time axis of that series
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
   
   Returns:
       g (float): lag-1 autocorrelation coefficient (for evenly-spaced time series)
       OR estimated persistence (for unevenly-spaced time series)
   
2017-07-18 15:53:48,535 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:48,556 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:8: input:
.. autofunction:: pyleoclim.Spectral.ar1_sim

2017-07-18 15:53:48,571 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import ar1_sim
2017-07-18 15:53:48,586 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:53:48,601 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:53:48,641 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'ar1_sim')
2017-07-18 15:53:48,686 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function ar1_sim at 0x123f380d0>
2017-07-18 15:53:48,715 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.ar1_sim', <function ar1_sim at 0x123f380d0>, {}, ['Produce p realiz
2017-07-18 15:53:48,735 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: ar1_sim(ys, n, p, ts=None, detrend='no')
   :module: pyleoclim.Spectral

   Produce p realizations of an AR1 process of length n with lag-1 autocorrelation g calculated from `ys` and `ts`
   
   Args:
       ys (array): a time series
       n, p (int): dimensions as n rows by p columns
       ts (array): the time axis of that series
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
   
   Returns:
       red (matrix): n rows by p columns matrix of an AR1 process
   
   
2017-07-18 15:53:48,760 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:48,790 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:10: input:
.. autofunction:: pyleoclim.Spectral.wwz

2017-07-18 15:53:48,816 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import wwz
2017-07-18 15:53:48,836 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:53:48,866 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:53:48,890 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwz')
2017-07-18 15:53:48,910 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwz at 0x123f38158>
2017-07-18 15:53:48,946 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.wwz', <function wwz at 0x123f38158>, {}, ['Return the weighted wave
2017-07-18 15:53:48,982 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwz(ys, ts, tau=None, freqs=None, c=0.012665147955292222, Neff=3, nMC=200, nproc=8, detrend='no', method='Kirchner_f2py')
   :module: pyleoclim.Spectral

   Return the weighted wavelet amplitude (WWA) with phase, AR1_q, and cone of influence, as well as WT coeeficients
   
   Args:
       ys (array): a time series, NaNs will be deleted automatically
       ts (array): the time points, if `ys` contains any NaNs, some of the time points will be deleted accordingly
       tau (array): the evenly-spaced time points
       freqs (array): vector of frequency
       c (float): the decay constant, the default value 1/(8*np.pi**2) is good for most of the cases
       Neff (int): effective number of points
       nMC (int): the number of Monte-Carlo simulations
       nproc (int): the number of processes for multiprocessing
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
       method (str): 'Foster' - the original WWZ method;
                     'Kirchner' - the method Kirchner adapted from Foster;
                     'Kirchner_f2py' - the method Kirchner adapted from Foster with f2py
   
   Returns:
       wwa (array): the weighted wavelet amplitude.
       AR1_q (array): AR1 simulations
       coi (array): cone of influence
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       Neffs (array): the matrix of effective number of points in the time-scale coordinates
       coeff (array): the wavelet transform coefficents
   
   
2017-07-18 15:53:49,017 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:49,055 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:49,083 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:12: input:
.. autofunction:: pyleoclim.Spectral.wwz_psd

2017-07-18 15:53:49,116 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import wwz_psd
2017-07-18 15:53:49,150 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:53:49,182 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:53:49,208 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwz_psd')
2017-07-18 15:53:49,234 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwz_psd at 0x123f381e0>
2017-07-18 15:53:49,253 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.wwz_psd', <function wwz_psd at 0x123f381e0>, {}, ['Return the psd o
2017-07-18 15:53:49,278 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwz_psd(ys, ts, freqs=None, tau=None, c=0.001, nproc=8, nMC=200, detrend='no', Neff=3, anti_alias=False, avgs=2, method='Kirchner_f2py')
   :module: pyleoclim.Spectral

   Return the psd of a timeseires directly using wwz method.
   
   Args:
       ys (array): a time series, NaNs will be deleted automatically
       ts (array): the time points, if `ys` contains any NaNs, some of the time points will be deleted accordingly
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       c (float): the decay constant, the default value 1e-3 is good for most of the cases
       nproc (int): the number of processes for multiprocessing
       nMC (int): the number of Monte-Carlo simulations
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
       method (str): 'Foster' - the original WWZ method;
                     'Kirchner' - the method Kirchner adapted from Foster;
                     'Kirchner_f2py' - the method Kirchner adapted from Foster with f2py
   
   Returns:
       psd (array): power spectral density
       freqs (array): vector of frequency
       psd_ar1_q95 (array): the 95% quantile of the psds of AR1 processes
   
   
2017-07-18 15:53:49,296 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:49,314 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:49,336 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:14: input:
.. autofunction:: pyleoclim.Spectral.plot_wwa

2017-07-18 15:53:49,350 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_wwa
2017-07-18 15:53:49,372 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:53:49,389 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:53:49,406 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_wwa')
2017-07-18 15:53:49,444 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_wwa at 0x123f382f0>
2017-07-18 15:53:49,498 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_wwa', <function plot_wwa at 0x123f382f0>, {}, ['Plot the wavel
2017-07-18 15:53:49,521 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_wwa(wwa, freqs, tau, Neff=3, AR1_q=None, coi=None, levels=None, tick_range=None, yticks=None, ylim=None, xticks=None, xlabels=None, figsize=[20, 8], clr_map='OrRd', cbar_drawedges=False, cone_alpha=0.5, plot_signif=False, signif_style='contour', plot_cone=False, ax=None, xlabel='Year', ylabel='Period')
   :module: pyleoclim.Spectral

   Plot the wavelet amplitude
   
   Args:
       wwa (array): the weighted wavelet amplitude.
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       Neff (int): effective number of points
       AR1_q (array): AR1 simulations
       coi (array): cone of influence
       levels (array): levels of values to plot
       tick_range (array): levels of ticks to show on the colorbar
       yticks (list): ticks on y-axis
       ylim (list): limitations for y-axis
       xticks (list): ticks on x-axis
       figsize (list): the size for the figure
       clr_map (str): the name of the colormap
       cbar_drawedges (bool): whether to draw edges on the colorbar or not
       cone_alpha (float): the alpha value for the area covered by cone of influence
       plot_signif (bool): plot 95% significant area or not
       signif_style (str): plot 95% significant area with `contour` or `shade`
       plot_cone (bool): plot cone of influence or not
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
       xlabel (str): The x-axis label
       ylabel (str): The y-axis label
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 15:53:49,552 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:16: input:
.. autofunction:: pyleoclim.Spectral.plot_wwadist

2017-07-18 15:53:49,580 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_wwadist
2017-07-18 15:53:49,601 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:53:49,621 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:53:49,639 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_wwadist')
2017-07-18 15:53:49,654 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_wwadist at 0x123f38378>
2017-07-18 15:53:49,669 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_wwadist', <function plot_wwadist at 0x123f38378>, {}, ['Plot t
2017-07-18 15:53:49,692 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_wwadist(wwa, ylim=None)
   :module: pyleoclim.Spectral

   Plot the distribution of wwa with the 95% quantile line.
   
   Args:
       wwa (array): the weighted wavelet amplitude.
       ylim (list): limitations for y-axis
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 15:53:49,712 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:18: input:
.. autofunction:: pyleoclim.Spectral.plot_psd
2017-07-18 15:53:49,730 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_psd
2017-07-18 15:53:49,744 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 15:53:49,758 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 15:53:49,775 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_psd')
2017-07-18 15:53:49,795 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_psd at 0x123f38400>
2017-07-18 15:53:49,811 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_psd', <function plot_psd at 0x123f38400>, {}, ['Plot the wavel
2017-07-18 15:53:49,827 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_psd(psd, freqs, lmstyle=None, linewidth=None, xticks=None, xlim=None, ylim=None, figsize=[20, 8], label='PSD', plot_ar1=True, psd_ar1_q95=None, psd_ar1_color='#d9544d', ax=None, xlabel='Period', ylabel='Spectral Density')
   :module: pyleoclim.Spectral

   Plot the wavelet amplitude
   
   Args:
       psd (array): power spectral density
       freqs (array): vector of frequency
       xticks (list): ticks on x-axis
       xlim (list): limits for x-axis
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
       xlabel (str): The x-axis label
       ylabel (str): The y-axis label
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 15:53:49,862 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.ar1_fit:7: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:49,881 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.ar1_sim:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:49,898 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz:13: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:49,915 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz:15: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:49,938 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz_psd:12: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:49,959 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz_psd:14: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:49,984 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "spectral functions"...>>,)
2017-07-18 15:53:50,027 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 70%] [35mStats[39;49;00m                                                 
2017-07-18 15:53:50,045 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>, 'Stats')
2017-07-18 15:53:50,064 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Stats', ['Statistics Functions\n====================\n\n.. autofunction:: pyleoclim.Stats.simpleSt
2017-07-18 15:53:50,086 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Stats.rst:4: input:
.. autofunction:: pyleoclim.Stats.simpleStats

2017-07-18 15:53:50,108 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Stats import simpleStats
2017-07-18 15:53:50,158 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Stats
2017-07-18 15:53:50,208 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Stats' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py'>
2017-07-18 15:53:50,233 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'simpleStats')
2017-07-18 15:53:50,254 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function simpleStats at 0x123f38510>
2017-07-18 15:53:50,378 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Stats.simpleStats', <function simpleStats at 0x123f38510>, {}, ['Computes si
2017-07-18 15:53:50,403 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: simpleStats(y, axis=None)
   :module: pyleoclim.Stats

   Computes simple statistics
   
   Computes the mean, median, min, max, standard deviation, and interquartile
   range of a numpy array y.
   
   Args:
       y (array): A Numpy array
       axis (int, typle of ints): Optional. Axis or Axes along which the means
           are computed, the default is to compute the mean of the flattened
           array. If a tuple of ints, performed over multiple axes
   
   Returns:
       The mean, median, min, max, standard deviation and IQR by columns
   
   
2017-07-18 15:53:50,425 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:50,465 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Stats.rst:6: input:
.. autofunction:: pyleoclim.Stats.corrsig
2017-07-18 15:53:50,498 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Stats import corrsig
2017-07-18 15:53:50,516 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Stats
2017-07-18 15:53:50,538 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Stats' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py'>
2017-07-18 15:53:50,570 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'corrsig')
2017-07-18 15:53:50,594 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function corrsig at 0x123f5b620>
2017-07-18 15:53:50,611 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Stats.corrsig', <function corrsig at 0x123f5b620>, {}, ['Estimates the signi
2017-07-18 15:53:50,633 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: corrsig(y1, y2, nsim=1000, method='isospectral', alpha=0.5)
   :module: pyleoclim.Stats

   Estimates the significance of correlations between non IID time series by 3 independent methods:
       1) 'ttest': T-test where d.o.f are corrected for the effect of serial correlation
       2) 'isopersistent': AR(1) modeling of x and y.
       3) 'isospectral': phase randomization of original inputs. (default)
       The T-test is parametric test, hence cheap but usually wrong except in idyllic circumstances.
       The others are non-parametric, but their computational requirements scales with nsim.
   
   Args:
       y1, y2 (array)- vector of (real) numbers of identical length, no NaNs allowed
       nsim (int)- the number of simulations [1000]
       method (str)- methods 1-3 above ['isospectral']
       alpha (float)- significance level for critical value estimation [0.05]
   
   Returns:
        r (real): correlation between x and y 
   
        signif (int): true  if significant; false otherwise 
   
        p (real): Fraction of time series with higher correlation coefficents than observed (approximates the p-value). 
   
           Note that signif = True if and only if p <= alpha.
   
2017-07-18 15:53:50,659 [WARNING] sphinx.util.docutils: Enumerated list ends without a blank line; unexpected unindent.
2017-07-18 15:53:50,712 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py:docstring of pyleoclim.Stats.simpleStats:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:50,731 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py:docstring of pyleoclim.Stats.corrsig:4: (WARNING/2) Enumerated list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:50,749 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "statistics functions"...>>,)
2017-07-18 15:53:50,770 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 80%] [35mSummaryPlots[39;49;00m                                          
2017-07-18 15:53:50,790 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>, 'SummaryPlots')
2017-07-18 15:53:50,815 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('SummaryPlots', ['Summary Plots\n==============\n\nThis module handles some basic return for the su
2017-07-18 15:53:50,836 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:8: input:
.. autofunction:: pyleoclim.SummaryPlots.getMetadata

2017-07-18 15:53:50,853 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import getMetadata
2017-07-18 15:53:50,870 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 15:53:50,886 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 15:53:50,917 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'getMetadata')
2017-07-18 15:53:50,953 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function getMetadata at 0x12302cf28>
2017-07-18 15:53:51,026 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.getMetadata', <function getMetadata at 0x12302cf28>, {}, ['Get 
2017-07-18 15:53:51,044 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: getMetadata(timeseries)
   :module: pyleoclim.SummaryPlots

   Get the necessary metadata to be printed out automatically
   
   Args:
       timeseries: a specific timeseries object. 
       
   Returns:
       A dictionary containing the following metadata:
   
       archiveType 
   
       Authors (if more than 2, replace by et al. 
   
       PublicationYear 
   
       Publication DOI 
   
       Variable Name 
   
       Units 
   
       Climate Interpretation 
   
       Calibration Equation 
   
       Calibration References 
   
       Calibration Notes 
   
       
   
2017-07-18 15:53:51,066 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:10: input:
.. autofunction:: pyleoclim.SummaryPlots.TsData

2017-07-18 15:53:51,085 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import TsData
2017-07-18 15:53:51,107 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 15:53:51,130 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 15:53:51,149 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'TsData')
2017-07-18 15:53:51,167 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function TsData at 0x123037048>
2017-07-18 15:53:51,188 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.TsData', <function TsData at 0x123037048>, {}, ['Get the PaleoD
2017-07-18 15:53:51,211 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: TsData(timeseries, x_axis='')
   :module: pyleoclim.SummaryPlots

   Get the PaleoData with age/depth information
       
   Get the necessary information for the TS plots/necessary to allow for
   axes specification
   
   Args:
       timeseries: a single timeseries object. 
           By default, will prompt the user
       x-axis (str): The representation against which to plot the 
           paleo-data. Options are "age", "year", and "depth". 
           Default is to let the system choose if only one available 
           or prompt the user.
   Returns:
       x - the x-valus 
   
       y - the y-values 
   
       archiveType - the archiveType (for plot settings) 
   
       x_label - the label for the x-axis 
   
       y_label - the label for the y-axis 
   
       label - the results of the x-axis query. Either depth, year, or age
       
   
2017-07-18 15:53:51,233 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:12: input:
.. autofunction:: pyleoclim.SummaryPlots.agemodelData
2017-07-18 15:53:51,252 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import agemodelData
2017-07-18 15:53:51,267 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 15:53:51,283 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 15:53:51,303 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'agemodelData')
2017-07-18 15:53:51,323 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function agemodelData at 0x1230370d0>
2017-07-18 15:53:51,343 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.agemodelData', <function agemodelData at 0x1230370d0>, {}, ['Ge
2017-07-18 15:53:51,361 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: agemodelData(timeseries)
   :module: pyleoclim.SummaryPlots

   Get the necessary information for the agemodel plot
   
   Args:
       timeseries: a single timeseries object. By default, will
           prompt the user
   
   Returns:
       depth - the depth values 
   
       age - the age values 
   
       x_label - the label for the x-axis 
   
       y_label - the label for the y-axis 
   
       archiveType - the archiveType (for default plot settings)
   
   
2017-07-18 15:53:51,388 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "summary plots"...>>,)
2017-07-18 15:53:51,421 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 90%] [35mTimeseries[39;49;00m                                            
2017-07-18 15:53:51,454 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>, 'Timeseries')
2017-07-18 15:53:51,491 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Timeseries', ['Timeseries Functions\n====================\n\nThis module allows the manipulation o
2017-07-18 15:53:51,560 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:6: input:
.. autofunction:: pyleoclim.Timeseries.bin

2017-07-18 15:53:51,593 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import bin
2017-07-18 15:53:51,623 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 15:53:51,655 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 15:53:51,707 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'bin')
2017-07-18 15:53:51,755 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function bin at 0x123f30b70>
2017-07-18 15:53:51,828 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.bin', <function bin at 0x123f30b70>, {}, ['Bin the values', '', '
2017-07-18 15:53:51,845 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: bin(x, y, bin_size='', start='', end='')
   :module: pyleoclim.Timeseries

   Bin the values
   
   Args:
       x (array): the x-axis series.
       y (array): the y-axis series.
       bin_size (float): The size of the bins. Default is the average resolution
       start (float): Where/when to start binning. Default is the minimum
       end (float): When/where to stop binning. Defulat is the maximum
   
   Returns:
       binned_values - the binned output 
   
       bins - the bins (centered on the median, i.e., the 100-200 bin is 150) 
   
       n - number of data points in each bin 
   
       error -  the standard error on the mean in each bin
   
   
2017-07-18 15:53:51,883 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:8: input:
.. autofunction:: pyleoclim.Timeseries.interp

2017-07-18 15:53:51,912 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import interp
2017-07-18 15:53:51,936 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 15:53:51,954 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 15:53:51,979 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'interp')
2017-07-18 15:53:52,012 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function interp at 0x123f30c80>
2017-07-18 15:53:52,046 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.interp', <function interp at 0x123f30c80>, {}, ['Linear interpola
2017-07-18 15:53:52,068 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: interp(x, y, interp_step='', start='', end='')
   :module: pyleoclim.Timeseries

   Linear interpolation onto a new x-axis
   
   Args:
       x (array): the x-axis
       y (array): the y-axis
       interp_step (float): the interpolation step. Default is mean resolution.
       start (float): where/when to start the interpolation. Default is min..
       end (float): where/when to stop the interpolation. Defaul is max.
   
   Returns:
       xi - the interpolated x-axis 
   
       interp_values - the interpolated values
    
   
2017-07-18 15:53:52,087 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:10: input:
.. autofunction:: pyleoclim.Timeseries.onCommonAxis

2017-07-18 15:53:52,104 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import onCommonAxis
2017-07-18 15:53:52,139 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 15:53:52,165 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 15:53:52,184 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'onCommonAxis')
2017-07-18 15:53:52,203 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function onCommonAxis at 0x123f30d08>
2017-07-18 15:53:52,237 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.onCommonAxis', <function onCommonAxis at 0x123f30d08>, {}, ['Plac
2017-07-18 15:53:52,271 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: onCommonAxis(x1, y1, x2, y2, interp_step='', start='', end='')
   :module: pyleoclim.Timeseries

   Places two timeseries on a common axis
   
   Args:
       x1 (array): x-axis values of the first timeseries
       y1 (array): y-axis values of the first timeseries
       x2 (array): x-axis values of the second timeseries
       y2 (array): y-axis values of the second timeseries
       interp_step (float): The interpolation step. Default is mean resolution
           of lowest resolution series
       start (float): where/when to start. Default is the maximum of the minima of
           the two timeseries
       end (float): Where/when to end. Default is the minimum of the maxima of
           the two timeseries
   
   Returns:
       xi -  the interpolated x-axis 
   
       interp_values1 -  the interpolated y-values for the first timeseries
       interp_values2 - the intespolated y-values for the second timeseries
   
2017-07-18 15:53:52,302 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 15:53:52,329 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 15:53:52,356 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:12: input:
.. autofunction:: pyleoclim.Timeseries.standardize
2017-07-18 15:53:52,380 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import standardize
2017-07-18 15:53:52,405 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 15:53:52,440 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 15:53:52,501 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'standardize')
2017-07-18 15:53:52,551 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function standardize at 0x123f30d90>
2017-07-18 15:53:52,603 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.standardize', <function standardize at 0x123f30d90>, {}, ['Center
2017-07-18 15:53:52,628 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: standardize(x, scale=1, axis=0, ddof=0, eps=0.001)
   :module: pyleoclim.Timeseries

   Centers and normalizes a given time series. Constant or nearly constant time series not rescaled.
   
   Args:
       x (array): vector of (real) numbers as a time series, NaNs allowed
       scale (real): a scale factor used to scale a record to a match a given variance
       axis (int or None): axis along which to operate, if None, compute over the whole array
       ddof (int): degress of freedom correction in the calculation of the standard deviation
       eps (real): a threshold to determine if the standard deviation is too close to zero
   
   Returns:
       z (array): the standardized time series (z-score), Z = (X - E[X])/std(X)*scale, NaNs allowed
       mu (real): the mean of the original time series, E[X]
       sig (real): the standard deviation of the original time series, std[X]
   
   References:
       1. Tapio Schneider's MATLAB code: http://www.clidyn.ethz.ch/imputation/standardize.m
       2. The zscore function in SciPy: https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py
   
   @author: fzhu
   
2017-07-18 15:53:52,688 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py:docstring of pyleoclim.Timeseries.onCommonAxis:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 15:53:52,744 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py:docstring of pyleoclim.Timeseries.onCommonAxis:10: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 15:53:52,769 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "timeseries functions"...>>,)
2017-07-18 15:53:52,804 [INFO] sphinx.util: [01mreading sources... [39;49;00m[100%] [35mindex[39;49;00m                                                 
2017-07-18 15:53:52,835 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>, 'index')
2017-07-18 15:53:52,861 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('index', [".. Pyleoclim documentation master file, created by\n   sphinx-quickstart on Fri Feb 10 1
2017-07-18 15:53:52,904 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <comment...><section "welcome to pyleoclim's documentati ...>,)
2017-07-18 15:53:52,950 [INFO] sphinx.util: 
2017-07-18 15:53:52,983 [DEBUG] sphinx.application: [app] emitting event: 'env-updated'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>,)
2017-07-18 15:53:37,500 [WARNING] sphinx.util.docutils: Literal block expected; none found.
2017-07-18 15:53:53,038 [INFO] sphinx.builders: [01mlooking for now-outdated files... [39;49;00m
2017-07-18 15:53:53,060 [DEBUG] sphinx.application: [app] emitting event: 'env-get-updated'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>,)
2017-07-18 15:53:53,080 [INFO] sphinx.builders: none found
2017-07-18 15:53:53,108 [INFO] sphinx.builders: [01mpickling environment... [39;49;00m
2017-07-18 15:53:53,143 [INFO] sphinx.builders: done
2017-07-18 15:53:53,162 [INFO] sphinx.builders: [01mchecking consistency... [39;49;00m
2017-07-18 15:53:53,182 [DEBUG] sphinx.application: [app] emitting event: 'env-check-consistency'(<sphinx.environment.BuildEnvironment object at 0x110dbbf98>,)
2017-07-18 15:53:53,205 [INFO] sphinx.builders: done
2017-07-18 15:53:53,232 [DEBUG] sphinx.builders: docnames to write: Introduction, LipdUtils, Main, Map, Plot, Spectral, Stats, SummaryPlots, Timeseries, index
2017-07-18 15:53:53,263 [INFO] sphinx.builders: [01mpreparing documents... [39;49;00m
2017-07-18 15:53:53,300 [INFO] sphinx.builders: done
2017-07-18 15:53:53,344 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 10%] [32mIntroduction[39;49;00m                                           
2017-07-18 15:53:53,387 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "pyleoclim"...>>, 'Introduction')
2017-07-18 15:53:53,736 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 20%] [32mLipdUtils[39;49;00m                                              
2017-07-18 15:53:53,830 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "lipd utilities"...>>, 'LipdUtils')
2017-07-18 15:53:53,913 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 30%] [32mMain[39;49;00m                                                   
2017-07-18 15:53:54,006 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "main functions"...>>, 'Main')
2017-07-18 15:53:54,160 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 40%] [32mMap[39;49;00m                                                    
2017-07-18 15:53:54,183 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "mapping functions"...>>, 'Map')
2017-07-18 15:53:54,263 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 50%] [32mPlot[39;49;00m                                                   
2017-07-18 15:53:54,290 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "plotting functions"...>>, 'Plot')
2017-07-18 15:53:54,366 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 60%] [32mSpectral[39;49;00m                                               
2017-07-18 15:53:54,387 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "spectral functions"...>>, 'Spectral')
2017-07-18 15:53:54,486 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 70%] [32mStats[39;49;00m                                                  
2017-07-18 15:53:54,577 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "statistics functions"...>>, 'Stats')
2017-07-18 15:53:54,677 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 80%] [32mSummaryPlots[39;49;00m                                           
2017-07-18 15:53:54,753 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "summary plots"...>>, 'SummaryPlots')
2017-07-18 15:53:54,912 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 90%] [32mTimeseries[39;49;00m                                             
2017-07-18 15:53:54,966 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "timeseries functions"...>>, 'Timeseries')
2017-07-18 15:53:55,178 [INFO] sphinx.util: [01mwriting output... [39;49;00m[100%] [32mindex[39;49;00m                                                  
2017-07-18 15:53:55,286 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <comment...><section "welcome to pyleoclim's documentati ...>, 'index')
2017-07-18 15:53:55,451 [INFO] sphinx.util: 
2017-07-18 15:53:55,503 [INFO] sphinx.builders.html: [01mgenerating indices...[39;49;00m
2017-07-18 15:53:55,618 [INFO] sphinx.builders.html:  genindex
2017-07-18 15:53:55,812 [INFO] sphinx.builders.html: 
2017-07-18 15:53:55,853 [DEBUG] sphinx.application: [app] emitting event: 'html-collect-pages'()
2017-07-18 15:53:55,877 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 12%] [34;01mpyleoclim.Stats[39;49;00m                              
2017-07-18 15:53:56,079 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 25%] [34;01mpyleoclim.Timeseries[39;49;00m                         
2017-07-18 15:53:56,307 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 37%] [34;01mpyleoclim.LipdUtils[39;49;00m                          
2017-07-18 15:53:56,573 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 50%] [34;01mpyleoclim.Plot[39;49;00m                               
2017-07-18 15:53:57,258 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 62%] [34;01mpyleoclim[39;49;00m                                    
2017-07-18 15:53:57,741 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 75%] [34;01mpyleoclim.Spectral[39;49;00m                           
2017-07-18 15:53:58,386 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[ 87%] [34;01mpyleoclim.Map[39;49;00m                                
2017-07-18 15:53:58,554 [INFO] sphinx.util: [01mhighlighting module code... [39;49;00m[100%] [34;01mpyleoclim.SummaryPlots[39;49;00m                       
2017-07-18 15:53:58,820 [INFO] sphinx.util: 
2017-07-18 15:53:59,038 [INFO] sphinx.builders.html: [01mwriting additional pages...[39;49;00m
2017-07-18 15:53:59,077 [INFO] sphinx.builders.html:  search
2017-07-18 15:53:59,222 [INFO] sphinx.builders.html: 
2017-07-18 15:53:59,292 [INFO] sphinx.builders.html: [01mcopying static files... [39;49;00m
2017-07-18 15:53:59,700 [INFO] sphinx.builders.html: done
2017-07-18 15:53:59,730 [INFO] sphinx.builders.html: [01mcopying extra files... [39;49;00m
2017-07-18 15:53:59,770 [INFO] sphinx.builders.html: done
2017-07-18 15:53:59,805 [INFO] sphinx.builders.html: [01mdumping search index in English (code: en) ... [39;49;00m
2017-07-18 15:53:59,854 [INFO] sphinx.builders.html: done
2017-07-18 15:53:59,876 [INFO] sphinx.builders.html: [01mdumping object inventory... [39;49;00m
2017-07-18 15:53:59,918 [INFO] sphinx.builders.html: done
2017-07-18 15:53:59,954 [INFO] sphinx.application: [01mbuild succeeded, 1 warning.[39;49;00m
2017-07-18 15:53:59,989 [DEBUG] sphinx.application: [app] emitting event: 'build-finished'(None,)
2017-07-18 16:20:07,608 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:07,609 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'createDir')
2017-07-18 16:20:07,622 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function createDir at 0x11c900400>
2017-07-18 16:20:07,690 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.createDir', <function createDir at 0x11c900400>, {}, ['Create a ne
2017-07-18 16:20:07,711 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: createDir(path, foldername)
   :module: pyleoclim.LipdUtils

   Create a new folder in a working directory
   
   Create a new folder in a working directory to save outputs from Pyleoclim.
   
   Args:
       path(str): the path to the new folder.
       foldername(str): the name of the folder to be created
       
   Returns:
       newdir - the full path to the new directory
       
   
2017-07-18 16:20:07,739 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:11: input:
.. autofunction:: pyleoclim.LipdUtils.saveFigure

2017-07-18 16:20:07,759 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import saveFigure
2017-07-18 16:20:07,792 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:07,821 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:07,837 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'saveFigure')
2017-07-18 16:20:07,862 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function saveFigure at 0x11c900488>
2017-07-18 16:20:07,883 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.saveFigure', <function saveFigure at 0x11c900488>, {}, ['Save a fi
2017-07-18 16:20:07,902 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: saveFigure(name, format='eps', dir='')
   :module: pyleoclim.LipdUtils

   Save a figure
   
   Save the figure in the directory. If not given, creates a folder in the 
   current working directory. 
   
   Args:
       name (str): name of the file
       format (str): One of the file extensions supported by the active 
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
       dir (str): the name of the folder in the LiPD working directory.
           If not provided, creates a default folder called 'figures'.
           
   
2017-07-18 16:20:07,925 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:07,942 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:07,963 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:16: input:
.. autofunction:: pyleoclim.LipdUtils.enumerateLipds

2017-07-18 16:20:07,983 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import enumerateLipds
2017-07-18 16:20:08,001 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:08,017 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:08,031 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'enumerateLipds')
2017-07-18 16:20:08,048 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function enumerateLipds at 0x11c900510>
2017-07-18 16:20:08,066 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.enumerateLipds', <function enumerateLipds at 0x11c900510>, {}, ['E
2017-07-18 16:20:08,085 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: enumerateLipds(lipds)
   :module: pyleoclim.LipdUtils

   Enumerate the LiPD files loaded in the workspace
   
   Args:
       lipds (dict): A dictionary of LiPD files. Can be obtained from
           pyleoclim.readLipd()
   
   
2017-07-18 16:20:08,113 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:18: input:
.. autofunction:: pyleoclim.LipdUtils.promptForLipd

2017-07-18 16:20:08,136 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import promptForLipd
2017-07-18 16:20:08,191 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:08,224 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:08,242 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'promptForLipd')
2017-07-18 16:20:08,263 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function promptForLipd at 0x11c900598>
2017-07-18 16:20:08,283 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.promptForLipd', <function promptForLipd at 0x11c900598>, {}, ['Pro
2017-07-18 16:20:08,299 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: promptForLipd(lipds)
   :module: pyleoclim.LipdUtils

   Prompt for a LiPD file
   
   Ask the user to select a LiPD file from a list
   Use this function in conjunction with enumerateLipds()
   
   Args:
       lipds (dict): A dictionary of LiPD files. Can be obtained from
           pyleoclim.readLipd()
   
   Returns:
       The index of the LiPD file
       
   
2017-07-18 16:20:08,326 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:23: input:
.. autofunction:: pyleoclim.LipdUtils.promptForVariable

2017-07-18 16:20:08,352 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import promptForVariable
2017-07-18 16:20:08,371 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:08,391 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:08,408 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'promptForVariable')
2017-07-18 16:20:08,423 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function promptForVariable at 0x11c900620>
2017-07-18 16:20:08,439 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.promptForVariable', <function promptForVariable at 0x11c900620>, {
2017-07-18 16:20:08,452 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: promptForVariable()
   :module: pyleoclim.LipdUtils

   Prompt for a specific variable
   
   Ask the user to select the variable they are interested in.
   Use this function in conjunction with readHeaders() or getTSO()
   
   Returns:
       The index of the variable
       
   
2017-07-18 16:20:08,476 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:25: input:
.. autofunction:: pyleoclim.LipdUtils.xAxisTs

2017-07-18 16:20:08,494 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import xAxisTs
2017-07-18 16:20:08,509 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:08,526 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:08,543 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'xAxisTs')
2017-07-18 16:20:08,557 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function xAxisTs at 0x11c9006a8>
2017-07-18 16:20:08,579 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.xAxisTs', <function xAxisTs at 0x11c9006a8>, {}, ['Prompt the user
2017-07-18 16:20:08,597 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: xAxisTs(timeseries)
   :module: pyleoclim.LipdUtils

   Prompt the user to choose a x-axis representation for the timeseries.
   
   Args:
       timeseries: a timeseries object
       
   Returns:
       x_axis - the values for the x-axis representation, 
   
       label - returns either "age", "year", or "depth"
       
   
2017-07-18 16:20:08,617 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:27: input:
.. autofunction:: pyleoclim.LipdUtils.checkXaxis

2017-07-18 16:20:08,633 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import checkXaxis
2017-07-18 16:20:08,694 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:08,719 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:08,735 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'checkXaxis')
2017-07-18 16:20:08,751 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function checkXaxis at 0x11c900730>
2017-07-18 16:20:08,767 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.checkXaxis', <function checkXaxis at 0x11c900730>, {}, ['Check tha
2017-07-18 16:20:08,791 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: checkXaxis(timeseries, x_axis='')
   :module: pyleoclim.LipdUtils

   Check that a x-axis is present for the timeseries
   
   Args:
       timeseries : a timeseries
       x_axis (str) : the x-axis representation, either depth, age or year
       
   Returns:
       x - the values for the x-axis representation, 
   
       label - returns either "age", "year", or "depth"    
   
   
2017-07-18 16:20:08,817 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:32: input:
.. autofunction:: pyleoclim.LipdUtils.enumerateTs

2017-07-18 16:20:08,841 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import enumerateTs
2017-07-18 16:20:08,866 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:08,891 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:08,912 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'enumerateTs')
2017-07-18 16:20:08,938 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function enumerateTs at 0x11c9007b8>
2017-07-18 16:20:08,952 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.enumerateTs', <function enumerateTs at 0x11c9007b8>, {}, ['Enumera
2017-07-18 16:20:08,965 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: enumerateTs(timeseries_list)
   :module: pyleoclim.LipdUtils

   Enumerate the available time series objects
   
   Args:
       timeseries_list: a  list of available timeseries objects. 
           To use the timeseries loaded upon initiation of the 
           pyleoclim package, use pyleo.time_series.
           
   
2017-07-18 16:20:08,989 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:34: input:
.. autofunction:: pyleoclim.LipdUtils.getTs

2017-07-18 16:20:09,008 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import getTs
2017-07-18 16:20:09,022 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:09,038 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:09,052 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'getTs')
2017-07-18 16:20:09,066 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function getTs at 0x11c900840>
2017-07-18 16:20:09,087 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.getTs', <function getTs at 0x11c900840>, {}, ['Get a specific time
2017-07-18 16:20:09,105 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: getTs(timeseries_list)
   :module: pyleoclim.LipdUtils

   Get a specific timeseries object from a dictionary of timeseries
   
   Args:
       timeseries_list: a  list of available timeseries objects. 
           To use the timeseries loaded upon initiation of the 
           pyleoclim package, use pyleo.time_series.
           
   Returns:
       A single timeseries object 
       
   
2017-07-18 16:20:09,131 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/LipdUtils.rst:39: input:
.. autofunction:: pyleoclim.LipdUtils.LipdToOntology
2017-07-18 16:20:09,167 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.LipdUtils import LipdToOntology
2017-07-18 16:20:09,196 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.LipdUtils
2017-07-18 16:20:09,218 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.LipdUtils' from '//anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py'>
2017-07-18 16:20:09,235 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'LipdToOntology')
2017-07-18 16:20:09,251 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function LipdToOntology at 0x11c9008c8>
2017-07-18 16:20:09,267 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.LipdUtils.LipdToOntology', <function LipdToOntology at 0x11c9008c8>, {}, ['s
2017-07-18 16:20:09,294 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: LipdToOntology(archiveType)
   :module: pyleoclim.LipdUtils

   standardize archiveType
   
   Transform the archiveType from their LiPD name to their ontology counterpart
   
   Args:
       archiveType (STR): name of the archiveType from the LiPD file
       
   Returns:
       archiveType according to the ontology
       
   
2017-07-18 16:20:09,330 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py:docstring of pyleoclim.LipdUtils.saveFigure:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:09,346 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/LipdUtils.py:docstring of pyleoclim.LipdUtils.saveFigure:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:09,363 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "lipd utilities"...>>,)
2017-07-18 16:20:09,392 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 30%] [35mMain[39;49;00m                                                  
2017-07-18 16:20:09,413 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>, 'Main')
2017-07-18 16:20:09,431 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Main', ['Main Functions\n==============\n\n\nUsing Pyleoclim with a LiPD file\n"""""""""""""""""""
2017-07-18 16:20:09,451 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:27: input:
.. autofunction:: pyleoclim.readLipd
2017-07-18 16:20:09,467 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import readLipd
2017-07-18 16:20:09,483 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:09,499 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:09,522 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'readLipd')
2017-07-18 16:20:09,536 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function readLipd at 0x11c900950>
2017-07-18 16:20:09,875 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.readLipd', <function readLipd at 0x11c900950>, {}, ['Read Lipd files into a 
2017-07-18 16:20:09,890 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: readLipd(usr_path='')
   :module: pyleoclim

   Read Lipd files into a dictionary
   
   This function is based on the function of the same name in the LiPD utilities.
   Sets the dictionary as global variable so that it doesn't have to be provided
   as an argument for every function.
   
   Args:
       usr_path (str): The path to a directory or a single file. (Optional argument)
       
   Returns:
       lipd_dict - a dictionary containing the LiPD library
   
   
2017-07-18 16:20:09,911 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:28: input:
.. autofunction:: pyleoclim.extractTs

2017-07-18 16:20:09,931 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import extractTs
2017-07-18 16:20:09,948 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:09,965 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:09,981 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'extractTs')
2017-07-18 16:20:09,997 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function extractTs at 0x11d8d8950>
2017-07-18 16:20:10,015 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.extractTs', <function extractTs at 0x11d8d8950>, {}, ['Extract timeseries di
2017-07-18 16:20:10,034 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: extractTs(lipds=None)
   :module: pyleoclim

   Extract timeseries dictionary
   
   This function is based on the function of the same name in the LiPD utilities.
   Set the dictionary as a global variable so that it doesn't have to be
   provided as an argument for every function. 
   
   Args:
       lipds (dict): A dictionary of LiPD files obtained through the 
       readLipd function
   
   Returns:
       ts_list - A list of timeseries object
   
   
2017-07-18 16:20:10,054 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:32: input:
.. autofunction:: pyleoclim.mapAllArchive

2017-07-18 16:20:10,068 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import mapAllArchive
2017-07-18 16:20:10,082 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:10,097 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:10,113 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapAllArchive')
2017-07-18 16:20:10,135 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapAllArchive at 0x11d8d89d8>
2017-07-18 16:20:10,153 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.mapAllArchive', <function mapAllArchive at 0x11d8d89d8>, {}, ['Map all the a
2017-07-18 16:20:10,174 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapAllArchive(lipds='', markersize=50, background='shadedrelief', figsize=[10, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Map all the available records loaded into the workspace by archiveType.
   
   Map of all the records into the workspace by archiveType.
       Uses the default color palette. Enter pyleoclim.plot_default for detail.
   
   Args:
       lipds (dict): A dictionary of LiPD files. (Optional)
       markersize (int): The size of the markers. Default is 50
       background (str): Plots one of the following images on the map:
           bluemarble, etopo, shadedrelief, or none (filled continents).
           Default is shadedrelief.
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)     
       saveFig (bool): Default is to not save the figure
       dir (str): The absolute path of the directory in which to save the
           figure. If not provided, creates a default folder called 'figures'
           in the LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
2017-07-18 16:20:10,199 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:10,227 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,242 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:10,260 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,278 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:34: input:
.. autofunction:: pyleoclim.mapLipd

2017-07-18 16:20:10,299 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import mapLipd
2017-07-18 16:20:10,315 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:10,338 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:10,352 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapLipd')
2017-07-18 16:20:10,371 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapLipd at 0x11d8d8a60>
2017-07-18 16:20:10,385 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.mapLipd', <function mapLipd at 0x11d8d8a60>, {}, ['Create a Map for a single
2017-07-18 16:20:10,401 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapLipd(timeseries='', countries=True, counties=False, rivers=False, states=False, background='shadedrelief', scale=0.5, markersize=50, marker='default', figsize=[4, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Create a Map for a single record
   
   Orthographic projection map of a single record.
   
   Args:
       timeseries: a LiPD timeseries object. Will prompt for one if not given
       countries (bool): Draws the country borders. Default is on (True).
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders.
           Default is off (False)
       background (str): Plots one of the following images on the map:
           bluemarble, etopo, shadedrelief, or none (filled continents).
           Default is shadedrelief
       scale (float): useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       markersize (int): default is 50
       marker (str): a string (or list) containing the color and shape of the
           marker. Default is by archiveType. Type pyleo.plot_default to see
           the default palette.
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
   
2017-07-18 16:20:10,417 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:10,439 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,455 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,471 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:10,491 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,506 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:10,522 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,548 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:38: input:
.. autofunction:: pyleoclim.plotTs

2017-07-18 16:20:10,564 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import plotTs
2017-07-18 16:20:10,579 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:10,601 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:10,617 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plotTs')
2017-07-18 16:20:10,640 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plotTs at 0x11d8d8ae8>
2017-07-18 16:20:10,654 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.plotTs', <function plotTs at 0x11d8d8ae8>, {}, ['Plot a single time series.'
2017-07-18 16:20:10,710 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plotTs(timeseries='', x_axis='', markersize=50, marker='default', figsize=[10, 4], saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Plot a single time series.
   
   Args:
       A timeseries: By default, will prompt the user for one.
       x_axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       markersize (int): default is 50.
       marker (str): a string (or list) containing the color and shape of the
           marker. Default is by archiveType. Type pyleo.plot_default to see
           the default palette.
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure.
   
   
2017-07-18 16:20:10,739 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:10,756 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,781 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:10,816 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,867 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:10,890 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:10,918 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:40: input:
.. autofunction:: pyleoclim.histTs

2017-07-18 16:20:10,942 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import histTs
2017-07-18 16:20:10,959 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:10,988 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:11,016 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'histTs')
2017-07-18 16:20:11,046 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function histTs at 0x11d8d8b70>
2017-07-18 16:20:11,065 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.histTs', <function histTs at 0x11d8d8b70>, {}, ['Plot a univariate distribut
2017-07-18 16:20:11,083 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: histTs(timeseries='', bins=None, hist=True, kde=True, rug=False, fit=None, hist_kws={'label': 'Histogram'}, kde_kws={'label': 'KDE fit'}, rug_kws={'label': 'Rug'}, fit_kws={'label': 'Fit'}, color='default', vertical=False, norm_hist=True, figsize=[5, 5], saveFig=False, format='eps', dir='')
   :module: pyleoclim

   Plot a univariate distribution of the PaleoData values
   
   This function is based on the seaborn displot function, which is
   itself a combination of the matplotlib hist function with the
   seaborn kdeplot() and rugplot() functions. It can also fit
   scipy.stats distributions and plot the estimated PDF over the data.
   
   Args:
       timeseries: A timeseries. By default, will prompt the user for one.
       bins (int): Specification of hist bins following matplotlib(hist),
           or None to use Freedman-Diaconis rule
       hist (bool): Whether to plot a (normed) histogram
       kde (bool): Whether to plot a gaussian kernel density estimate
       rug (bool): Whether to draw a rugplot on the support axis
       fit: Random variable object. An object with fit method, returning
           a tuple that can be passed to a pdf method of positional
           arguments following a grid of values to evaluate the pdf on.
       {hist, kde, rug, fit}_kws: Dictionaries. Keyword arguments for
           underlying plotting functions. If modifying the dictionary, make
           sure the labels "hist", "kde", "rug" and "fit" are still passed.
       color (str): matplotlib color. Color to plot everything but the
           fitted curve in. Default is to use the default paletter for each
           archive type.
       vertical (bool): if True, oberved values are on y-axis.
       norm_hist (bool): If True (default), the histrogram height shows
           a density rather than a count. This is implied if a KDE or
           fitted density is plotted
       figsize (list): the size for the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns
       fig - The figure
   
   
2017-07-18 16:20:11,110 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:11,132 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,156 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:11,178 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,200 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,219 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:11,244 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,271 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:11,298 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,321 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:48: input:
.. autofunction:: pyleoclim.summaryTs

2017-07-18 16:20:11,340 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import summaryTs
2017-07-18 16:20:11,359 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:11,379 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:11,395 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'summaryTs')
2017-07-18 16:20:11,411 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function summaryTs at 0x11d8d8bf8>
2017-07-18 16:20:11,425 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.summaryTs', <function summaryTs at 0x11d8d8bf8>, {}, ['Basic summary plot', 
2017-07-18 16:20:11,445 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: summaryTs(timeseries='', x_axis='', saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Basic summary plot
   
   Plots the following information: the time series, a histogram of
   the PaleoData_values, location map, spectral density using the wwz 
   method, and metadata about the record.
   
   Args:
       timeseries: a timeseries object. By default, will prompt for one
       x_axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
   
   Returns:
       The figure
   
   
2017-07-18 16:20:11,475 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:11,503 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,520 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:11,540 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,573 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:53: input:
.. autofunction:: pyleoclim.statsTs

2017-07-18 16:20:11,614 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import statsTs
2017-07-18 16:20:11,646 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:11,669 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:11,686 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'statsTs')
2017-07-18 16:20:11,702 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function statsTs at 0x11d8d8c80>
2017-07-18 16:20:11,717 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.statsTs', <function statsTs at 0x11d8d8c80>, {}, ['Calculate simple statisti
2017-07-18 16:20:11,733 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: statsTs(timeseries='')
   :module: pyleoclim

   Calculate simple statistics of a timeseries
   
   Args:
       timeseries: sytem will prompt for one if not given
   
   Returns:
       the mean, median, min, max, standard deviation and the
       inter-quartile range (IQR) of a timeseries.
   
   Examples:
       >>> mean, median, min_, max_, std, IQR = pyleo.statsTs(timeseries)
   
   
2017-07-18 16:20:11,755 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:55: input:
.. autofunction:: pyleoclim.corrSigTs

2017-07-18 16:20:11,773 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import corrSigTs
2017-07-18 16:20:11,788 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:11,803 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:11,818 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'corrSigTs')
2017-07-18 16:20:11,834 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function corrSigTs at 0x11d8d8d08>
2017-07-18 16:20:11,862 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.corrSigTs', <function corrSigTs at 0x11d8d8d08>, {}, ['Estimates the signifi
2017-07-18 16:20:11,890 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: corrSigTs(timeseries1='', timeseries2='', x_axis='', interp_step='', start='', end='', nsim=1000, method='isospectral', alpha=0.5)
   :module: pyleoclim

   Estimates the significance of correlations between non IID timeseries.
   
   Function written by. F. Zhu.
   
   Args:
       timeseries1, timeseries2: timeseries object. Default is blank.
       x-axis (str): The representation against which to express the
           paleo-data. Options are "age", "year", and "depth".
           Default is to let the system choose if only one available
           or prompt the user.
       interp_step (float): the step size. By default, will prompt the user.
       start (float): Start time/age/depth. Default is the maximum of
           the minima of the two timeseries
       end (float): End time/age/depth. Default is the minimum of the
           maxima of the two timeseries
       nsim (int): the number of simulations. Default is 1000
       method (str): method use to estimate the correlation and significance.
           Available methods include:
               - 'ttest': T-test where the degrees of freedom are corrected for
               the effect of serial correlation 
   
               - 'isopersistant': AR(1) modeling of the two timeseries 
   
               - 'isospectral' (default): phase randomization of original
               inputs.
           The T-test is parametric test, hence cheap but usually wrong
           except in idyllic circumstances.
           The others are non-parametric, but their computational
           requirements scales with nsim.
       alpha (float): significance level for critical value estimation. Default is 0.05
   
   Returns:
       r (float) - correlation between the two timeseries 
   
       sig (bool) -  Returns True if significant, False otherwise 
   
       p (real) - the p-value
   
   
2017-07-18 16:20:11,918 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:11,936 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,957 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:11,973 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:11,989 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,004 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:12,019 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,037 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,059 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,080 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,098 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:61: input:
.. autofunction:: pyleoclim.binTs

2017-07-18 16:20:12,113 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import binTs
2017-07-18 16:20:12,128 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:12,144 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:12,169 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'binTs')
2017-07-18 16:20:12,186 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function binTs at 0x11d8d8d90>
2017-07-18 16:20:12,202 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.binTs', <function binTs at 0x11d8d8d90>, {}, ['Bin the paleoData values of t
2017-07-18 16:20:12,216 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: binTs(timeseries='', x_axis='', bin_size='', start='', end='')
   :module: pyleoclim

   Bin the paleoData values of the timeseries
   
   Args:
       timeseries. By default, will prompt the user for one.
       x-axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system  choose if only one available or prompt the user.
       bin_size (float): the size of the bins to be used. By default,
           will prompt for one
       start (float): Start time/age/depth. Default is the minimum
       end (float): End time/age/depth. Default is the maximum
   
   Returns:
       binned_values- the binned output,
   
       bins-  the bins (centered on the median, i.e. the 100-200 bin is 150),
   
       n-  number of data points in each bin,
   
       error- the standard error on the mean in each bin
   
   
   
2017-07-18 16:20:12,234 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:12,251 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,284 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,311 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:63: input:
.. autofunction:: pyleoclim.interpTs

2017-07-18 16:20:12,329 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import interpTs
2017-07-18 16:20:12,346 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:12,363 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:12,381 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'interpTs')
2017-07-18 16:20:12,394 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function interpTs at 0x11d8d8e18>
2017-07-18 16:20:12,411 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.interpTs', <function interpTs at 0x11d8d8e18>, {}, ['Simple linear interpola
2017-07-18 16:20:12,425 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: interpTs(timeseries='', x_axis='', interp_step='', start='', end='')
   :module: pyleoclim

   Simple linear interpolation
   
   Simple linear interpolation of the data using the numpy.interp method
   
   Args:
       timeseries. Default is blank, will prompt for it
       x-axis (str): The representation against which to plot the paleo-data.
           Options are "age", "year", and "depth". Default is to let the
           system choose if only one available or prompt the user.
       interp_step (float): the step size. By default, will prompt the user.
       start (float): Start year/age/depth. Default is the minimum
       end (float): End year/age/depth. Default is the maximum
   
   Returns:
       interp_age - the interpolated age/year/depth according to the end/start
       and time step, 
   
       interp_values - the interpolated values
   
   
2017-07-18 16:20:12,442 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:12,459 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,482 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:65: input:
.. autofunction:: pyleoclim.standardizeTs

2017-07-18 16:20:12,496 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import standardizeTs
2017-07-18 16:20:12,513 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:12,529 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:12,546 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'standardizeTs')
2017-07-18 16:20:12,563 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function standardizeTs at 0x11d8d8ea0>
2017-07-18 16:20:12,583 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.standardizeTs', <function standardizeTs at 0x11d8d8ea0>, {}, ['Centers and n
2017-07-18 16:20:12,596 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: standardizeTs(timeseries='', scale=1, ddof=0, eps=0.001)
   :module: pyleoclim

   Centers and normalizes the paleoData values of a  given time series.
   
   Constant or nearly constant time series not rescaled.
   
   Args:
       x (array): vector of (real) numbers as a time series, NaNs allowed
       scale (real): a scale factor used to scale a record to a match a given variance
       axis (int or None): axis along which to operate, if None, compute over the whole array
       ddof (int): degress of freedom correction in the calculation of the standard deviation
       eps (real): a threshold to determine if the standard deviation is too close to zero
   
   Returns:
       - z (array): the standardized time series (z-score), Z = (X - E[X])/std(X)*scale, NaNs allowed 
   
       - mu (real): the mean of the original time series, E[X] 
   
       - sig (real): the standard deviation of the original time series, std[X] 
   
   
   References:
       1. Tapio Schneider's MATLAB code: http://www.clidyn.ethz.ch/imputation/standardize.m
       2. The zscore function in SciPy: https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py
   
   @author: fzhu
   
2017-07-18 16:20:12,618 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Main.rst:69: input:
.. autofunction:: pyleoclim.wwzTs

2017-07-18 16:20:12,634 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim import wwzTs
2017-07-18 16:20:12,650 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim
2017-07-18 16:20:12,670 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim' from '//anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py'>
2017-07-18 16:20:12,688 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwzTs')
2017-07-18 16:20:12,705 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwzTs at 0x11d8da048>
2017-07-18 16:20:12,720 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.wwzTs', <function wwzTs at 0x11d8da048>, {}, ['Weigthed wavelet Z-transform 
2017-07-18 16:20:12,733 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwzTs(timeseries='', wwz=False, psd=True, wwz_default=True, psd_default=True, wwaplot_default=True, psdplot_default=True, fig=True, saveFig=False, dir='', format='eps')
   :module: pyleoclim

   Weigthed wavelet Z-transform analysis
   
   Wavelet analysis for unevenly spaced data adapted from Foster et al. (1996)
   
   Args:
       timeseries (dict): A LiPD timeseries object (Optional, will prompt for one.)
       wwz (bool): If True, will perform wavelet analysis
       psd (bool): If True, will inform the power spectral density of the timeseries
       wwz_default: If True, will use the following default parameters:
           
           wwz_default = {'tau':None,'freqs':None,'c':1/(8*np.pi**2),'Neff':3,'nMC':200,
                              'nproc':8,'detrend':'no','method':'Kirchner_f2py'}.
               
           Modify the values for specific keys to change the default behavior.
               
       psd_default: If True, will use the following default parameters:
           
           psd_default = {'tau':None,
                         'freqs': None,
                         'c':1e-3,
                         'nproc':8,
                         'nMC':200,
                         'detrend':'no',
                         'Neff':3,
                         'anti_alias':False,
                         'avgs':2,
                         'method':'Kirchner_f2py'}
           
           Modify the values for specific keys to change the default behavior.
           
       wwaplot_default: If True, will use the following default parameters:
           
           wwaplot_default={'Neff':3,
                                'AR1_q':AR1_q,
                                'coi':coi,
                                'levels':None,
                                'tick_range':None,
                                'yticks':None,
                                'ylim':None,
                                'xticks':None,
                                'xlabels':None,
                                'figsize':[20,8],
                                'clr_map':'OrRd',
                                'cbar_drawedges':False,
                                'cone_alpha':0.5,
                                'plot_signif':True,
                                'signif_style':'contour',
                                'plot_cone':True}
           
           Modify the values for specific keys to change the default behavior.
       psdplot_default: If True, will use the following default parameters:
           
           psdplot_default={'lmstyle':None,
                            'linewidth':None,
                            'xticks':None,
                            'xlim':None,
                            'ylim':None,
                            'figsize':[20,8],
                            'label':'PSD',
                            'plot_ar1':True,
                            'psd_ar1_q95':psd_ar1_q95,
                            'psd_ar1_color':sns.xkcd_rgb["pale red"]}
           
           Modify the values for specific keys to change the default behavior.
           
       fig (bool): If True, plots the figure
       saveFig (bool): default is to not save the figure
       dir (str): the full path of the directory in which to save the figure.
           If not provided, creates a default folder called 'figures' in the
           LiPD working directory (lipd.path).
       format (str): One of the file extensions supported by the active
           backend. Default is "eps". Most backend support png, pdf, ps, eps,
           and svg.
       
   Returns:
       dict_out (dict): A dictionary of outputs. 
           
           For wwz: 
           
           - wwa (array): The weights wavelet amplitude 
       
           - AR1_q (array): AR1 simulations 
       
           - coi (array): cone of influence 
       
           - freqs (array): vector for frequencies 
       
           - tau (array): the evenly-spaced time points, namely the time 
           shift for wavelet analysis. 
       
           - Neffs (array): The matrix of effective number of points in the
           time-scale coordinates.
       
           - coeff (array): The wavelet transform coefficients
       
           For psd: 
           
           - psd (array): power spectral density 
       
           - freqs (array): vector of frequency 
       
           - psd_ar1_q95 (array): the 95% quantile of the psds of AR1 processes 
       
       fig: The figure
        
       References:
           Foster, G. (1996). Wavelets for period analysis of unevenly 
           sampled time series. The Astronomical Journal, 112(4), 1709-1729.
       
       Examples:
           To run both wwz and psd: 
   
           
           >>> dict_out, fig = pyleoclim.wwzTs(wwz=True)
           
           Note: This will return a single figure with wwa and psd 
   
           
           To change a default behavior:
   
           
           >>> dict_out, fig = pyleoclim.wwzTs(psd_default = {'nMC':1000}) 
          
   
2017-07-18 16:20:12,755 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,778 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:12,793 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,813 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,830 [WARNING] sphinx.util.docutils: Bullet list ends without a blank line; unexpected unindent.
2017-07-18 16:20:12,907 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:12,922 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:12,936 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:16: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:12,951 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapAllArchive:18: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:12,965 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:12,990 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,012 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:17: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,031 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:19: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,050 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:21: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,064 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:24: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,080 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.mapLipd:26: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,098 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:6: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,113 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:8: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,128 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,143 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,156 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:15: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,170 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.plotTs:17: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,188 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,204 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,220 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:16: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,235 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:18: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,251 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,265 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:26: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,283 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:28: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,299 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:31: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,314 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.histTs:33: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,329 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:10: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,344 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,359 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:14: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,373 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.summaryTs:16: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,395 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,408 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,423 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:13: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,437 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:14: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,450 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:16: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,465 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:18: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,481 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:20: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,508 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:25: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,531 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:26: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,548 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.corrSigTs:30: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,562 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:6: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,575 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:8: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,590 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.binTs:10: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,609 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.interpTs:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,622 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.interpTs:10: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,638 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:51: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,653 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:69: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:13,673 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:71: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,696 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:89: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,719 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/__init__.py:docstring of pyleoclim.wwzTs:92: (WARNING/2) Bullet list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:13,739 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "main functions"...>>,)
2017-07-18 16:20:13,766 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 40%] [35mMap[39;49;00m                                                   
2017-07-18 16:20:13,783 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>, 'Map')
2017-07-18 16:20:13,806 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Map', ['Mapping Functions\n=================\n\nThis module uses the Basemap package for mapping. 
2017-07-18 16:20:13,821 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Map.rst:6: input:
.. autofunction:: pyleoclim.Map.mapAll

2017-07-18 16:20:13,836 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Map import mapAll
2017-07-18 16:20:13,851 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Map
2017-07-18 16:20:13,868 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Map' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Map.py'>
2017-07-18 16:20:13,884 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapAll')
2017-07-18 16:20:13,902 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapAll at 0x1087de2f0>
2017-07-18 16:20:13,952 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Map.mapAll', <function mapAll at 0x1087de2f0>, {}, ['Map the location of all
2017-07-18 16:20:13,969 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapAll(lat, lon, criteria, projection='robin', lat_0='', lon_0='', llcrnrlat=-90, urcrnrlat=90, llcrnrlon=-180, urcrnrlon=180, countries=False, counties=False, rivers=False, states=False, figsize=[10, 4], ax=None, background='none', scale=0.5, palette='', markersize=50)
   :module: pyleoclim.Map

   Map the location of all lat/lon according to some criteria 
   
   Map the location of all lat/lon according to some criteria. The choice of 
   plotting color/marker is passed through palette according to unique 
   criteria (e.g., record name, archive type, proxy observation type).
   
   Args:
       lat (list): a list of latitude.
       lon (list): a list of longitude.
       criteria (list): a list of criteria for plotting purposes. For instance,
           a map by the types of archive present in the dataset or proxy
           observations.
       projection (string): the map projection. Refers to the Basemap
           documentation for a list of available projections. Only projections
           supporting setting the map center with a single lat/lon or with
           the coordinates of the rectangle are currently supported. 
           Default is to use a Robinson projection.
       lat_0, lon_0 (float): the center coordinates for the map. Default is
           mean latitude/longitude in the list. 
           If the chosen projection doesn't support it, Basemap will
           ignore the given values.
       llcrnrlat, urcrnrlat, llcrnrlon, urcrnrlon (float): The coordinates
           of the two opposite corners of the rectangle.
       countries (bool): Draws the countries border. Defaults is off (False). 
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders. 
           Default is off (False).
       background (string): Plots one of the following images on the map: 
           bluemarble, etopo, shadedrelief, or none (filled continents). 
           Default is none.
       scale (float): Useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       palette (dict): A dictionary of plotting color/marker by criteria. The
           keys should correspond to ***unique*** criteria with a list of 
           associated values. The list should be in the format 
           ['color', 'marker'].
       markersize (int): The size of the marker.
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot) 
       
   Returns:
       The figure       
   
2017-07-18 16:20:13,989 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:14,008 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:14,024 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:14,041 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:14,057 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:14,072 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:14,091 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Map.rst:8: input:
.. autofunction:: pyleoclim.Map.mapOne
2017-07-18 16:20:14,110 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Map import mapOne
2017-07-18 16:20:14,123 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Map
2017-07-18 16:20:14,139 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Map' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Map.py'>
2017-07-18 16:20:14,167 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'mapOne')
2017-07-18 16:20:14,193 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function mapOne at 0x11c900378>
2017-07-18 16:20:14,223 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Map.mapOne', <function mapOne at 0x11c900378>, {}, ['Map one location on the
2017-07-18 16:20:14,252 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: mapOne(lat, lon, projection='ortho', lat_0='', lon_0='', llcrnrlat=-90, urcrnrlat=90, llcrnrlon=-180, urcrnrlon=180, countries=True, counties=False, rivers=False, states=False, background='shadedrelief', scale=0.5, markersize=50, marker='ro', figsize=[4, 4], ax=None)
   :module: pyleoclim.Map

   Map one location on the globe
   
   Args:
       lat (float): a float number representing latitude
       lon (float): a float number representing longitude
       projection (string): the map projection. Refers to the Basemap
           documentation for a list of available projections. Only projections
           supporting setting the map center with a single lat/lon or with
           the coordinates of the rectangle are currently supported. 
           Default is to use a Robinson projection.
       lat_0, lon_0 (float): the center coordinates for the map. Default is
           mean latitude/longitude in the list. 
           If the chosen projection doesn't support it, Basemap will
           ignore the given values.
       llcrnrlat, urcrnrlat, llcrnrlon, urcrnrlon (float): The coordinates
           of the two opposite corners of the rectangle.
       countries (bool): Draws the countries border. Defaults is off (False). 
       counties (bool): Draws the USA counties. Default is off (False).
       rivers (bool): Draws the rivers. Default is off (False).
       states (bool): Draws the American and Australian states borders. 
           Default is off (False).
       background (string): Plots one of the following images on the map: 
           bluemarble, etopo, shadedrelief, or none (filled continents). 
           Default is none.
       scale (float): Useful to downgrade the original image resolution to
           speed up the process. Default is 0.5.
       markersize (int): The size of the marker.
       marker (str or list): color and type of marker. 
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot) 
   
   
2017-07-18 16:20:14,277 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:14,294 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:14,321 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:14,352 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:14,378 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:14,405 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:14,448 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:14,463 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:13: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:14,480 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:14,505 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:28: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:14,524 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:29: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:14,557 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapAll:38: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:14,575 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:7: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:14,591 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:11: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:14,615 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:17: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:14,632 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:21: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:14,659 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:22: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:14,682 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Map.py:docstring of pyleoclim.Map.mapOne:27: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:14,698 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "mapping functions"...>>,)
2017-07-18 16:20:14,729 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 50%] [35mPlot[39;49;00m                                                  
2017-07-18 16:20:14,746 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>, 'Plot')
2017-07-18 16:20:14,771 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Plot', ['Plotting Functions\n==================\n\n.. autofunction:: pyleoclim.Plot.plot\n\n.. aut
2017-07-18 16:20:14,792 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Plot.rst:4: input:
.. autofunction:: pyleoclim.Plot.plot

2017-07-18 16:20:14,814 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Plot import plot
2017-07-18 16:20:14,838 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Plot
2017-07-18 16:20:14,865 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Plot' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py'>
2017-07-18 16:20:14,884 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot')
2017-07-18 16:20:14,898 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot at 0x11c900bf8>
2017-07-18 16:20:14,937 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Plot.plot', <function plot at 0x11c900bf8>, {}, ['Make a 2-D plot', '', 'Arg
2017-07-18 16:20:14,952 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot(x, y, markersize=50, marker='ro', x_label='', y_label='', title='', figsize=[10, 4], ax=None)
   :module: pyleoclim.Plot

   Make a 2-D plot
   
   Args:
       x (numpy array): a 1xn numpy array of values for the x-axis
       y (numpy array): a 1xn numpy array for the y-axis
       markersize (int): the size of the marker
       marker (string or list): color and shape of the marker
       x_axis_label (str): the label for the x-axis
       y_axis_label (str): the label for the y-axis
       title (str): the title for the plot
       figsize (list): the size of the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
           
   Return:
       The figure       
   
   
2017-07-18 16:20:14,973 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Plot.rst:6: input:
.. autofunction:: pyleoclim.Plot.plot_hist
2017-07-18 16:20:14,990 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Plot import plot_hist
2017-07-18 16:20:15,003 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Plot
2017-07-18 16:20:15,025 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Plot' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py'>
2017-07-18 16:20:15,051 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_hist')
2017-07-18 16:20:15,076 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_hist at 0x11c900c80>
2017-07-18 16:20:15,099 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Plot.plot_hist', <function plot_hist at 0x11c900c80>, {}, ['Plot a univariat
2017-07-18 16:20:15,137 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_hist(y, bins=None, hist=True, label='', kde=True, rug=False, fit=None, hist_kws={'label': 'Histogram'}, kde_kws={'label': 'KDE fit'}, rug_kws={'label': 'rug'}, fit_kws={'label': 'fit'}, color='0.7', vertical=False, norm_hist=True, figsize=[5, 5], ax=None)
   :module: pyleoclim.Plot

   Plot a univariate distribution of the PaleoData values
           
   This function is based on the seaborn displot function, which is
   itself a combination of the matplotlib hist function with the 
   seaborn kdeplot() and rugplot() functions. It can also fit 
   scipy.stats distributions and plot the estimated PDF over the data.
       
   Args:
       y (array): nx1 numpy array. No missing values allowed 
       bins (int): Specification of hist bins following matplotlib(hist), 
           or None to use Freedman-Diaconis rule
       hist (bool): Whether to plot a (normed) histogram 
       label (str): The label for the axis
       kde (bool): Whether to plot a gaussian kernel density estimate
       rug (bool): Whether to draw a rugplot on the support axis
       fit: Random variable object. An object with fit method, returning 
           a tuple that can be passed to a pdf method of positional 
           arguments following a grid of values to evaluate the pdf on.
       {hist, kde, rug, fit}_kws: Dictionaries. Keyword arguments for 
           underlying plotting functions. If modifying the dictionary, make
           sure the labels "hist", "kde", "rug" and "fit" are still passed.
       color (str): matplotlib color. Color to plot everything but the
           fitted curve in.
       vertical (bool): if True, oberved values are on y-axis.
       norm_hist (bool): If True (default), the histrogram height shows
           a density rather than a count. This is implied if a KDE or 
           fitted density is plotted
       figsize (list): the size of the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)     
   
   Returns
      fig - The figure
   
2017-07-18 16:20:15,175 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:15,208 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:15,244 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:15,275 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:15,302 [WARNING] sphinx.util.docutils: Definition list ends without a blank line; unexpected unindent.
2017-07-18 16:20:15,333 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:15,352 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:15,395 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:11: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:15,411 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:12: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:15,434 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:17: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:15,458 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:19: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:15,484 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:24: (WARNING/2) Definition list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:15,501 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:26: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:15,517 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Plot.py:docstring of pyleoclim.Plot.plot_hist:28: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:15,546 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "plotting functions"...>>,)
2017-07-18 16:20:15,569 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 60%] [35mSpectral[39;49;00m                                              
2017-07-18 16:20:15,584 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>, 'Spectral')
2017-07-18 16:20:15,603 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Spectral', ['Spectral Functions\n==================\n\nThis module allows analysis in the frequenc
2017-07-18 16:20:15,619 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:6: input:
.. autofunction:: pyleoclim.Spectral.ar1_fit

2017-07-18 16:20:15,639 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import ar1_fit
2017-07-18 16:20:15,664 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 16:20:15,685 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 16:20:15,704 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'ar1_fit')
2017-07-18 16:20:15,730 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function ar1_fit at 0x11c900d90>
2017-07-18 16:20:16,259 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.ar1_fit', <function ar1_fit at 0x11c900d90>, {}, ['Returns the lag-
2017-07-18 16:20:16,272 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: ar1_fit(ys, ts=None, detrend='no')
   :module: pyleoclim.Spectral

   Returns the lag-1 autocorrelation from ar1 fit OR persistence from tauest.
   
   Args:
       ys (array): the time series
       ts (array): the time axis of that series
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
   
   Returns:
       g (float): lag-1 autocorrelation coefficient (for evenly-spaced time series)
       OR estimated persistence (for unevenly-spaced time series)
   
2017-07-18 16:20:16,287 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:16,306 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:8: input:
.. autofunction:: pyleoclim.Spectral.ar1_sim

2017-07-18 16:20:16,321 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import ar1_sim
2017-07-18 16:20:16,339 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 16:20:16,353 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 16:20:16,366 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'ar1_sim')
2017-07-18 16:20:16,380 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function ar1_sim at 0x11d80cae8>
2017-07-18 16:20:16,397 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.ar1_sim', <function ar1_sim at 0x11d80cae8>, {}, ['Produce p realiz
2017-07-18 16:20:16,417 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: ar1_sim(ys, n, p, ts=None, detrend='no')
   :module: pyleoclim.Spectral

   Produce p realizations of an AR1 process of length n with lag-1 autocorrelation g calculated from `ys` and `ts`
   
   Args:
       ys (array): a time series
       n, p (int): dimensions as n rows by p columns
       ts (array): the time axis of that series
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
   
   Returns:
       red (matrix): n rows by p columns matrix of an AR1 process
   
   
2017-07-18 16:20:16,436 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:16,452 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:10: input:
.. autofunction:: pyleoclim.Spectral.wwz

2017-07-18 16:20:16,466 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import wwz
2017-07-18 16:20:16,484 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 16:20:16,512 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 16:20:16,530 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwz')
2017-07-18 16:20:16,550 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwz at 0x11d80cb70>
2017-07-18 16:20:16,566 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.wwz', <function wwz at 0x11d80cb70>, {}, ['Return the weighted wave
2017-07-18 16:20:16,580 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwz(ys, ts, tau=None, freqs=None, c=0.012665147955292222, Neff=3, nMC=200, nproc=8, detrend='no', method='Kirchner_f2py')
   :module: pyleoclim.Spectral

   Return the weighted wavelet amplitude (WWA) with phase, AR1_q, and cone of influence, as well as WT coeeficients
   
   Args:
       ys (array): a time series, NaNs will be deleted automatically
       ts (array): the time points, if `ys` contains any NaNs, some of the time points will be deleted accordingly
       tau (array): the evenly-spaced time points
       freqs (array): vector of frequency
       c (float): the decay constant, the default value 1/(8*np.pi**2) is good for most of the cases
       Neff (int): effective number of points
       nMC (int): the number of Monte-Carlo simulations
       nproc (int): the number of processes for multiprocessing
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
       method (str): 'Foster' - the original WWZ method;
                     'Kirchner' - the method Kirchner adapted from Foster;
                     'Kirchner_f2py' - the method Kirchner adapted from Foster with f2py
   
   Returns:
       wwa (array): the weighted wavelet amplitude.
       AR1_q (array): AR1 simulations
       coi (array): cone of influence
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       Neffs (array): the matrix of effective number of points in the time-scale coordinates
       coeff (array): the wavelet transform coefficents
   
   
2017-07-18 16:20:16,600 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:16,623 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:16,647 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:12: input:
.. autofunction:: pyleoclim.Spectral.wwz_psd

2017-07-18 16:20:16,666 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import wwz_psd
2017-07-18 16:20:16,691 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 16:20:16,733 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 16:20:16,748 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'wwz_psd')
2017-07-18 16:20:16,764 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function wwz_psd at 0x11d80cbf8>
2017-07-18 16:20:16,777 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.wwz_psd', <function wwz_psd at 0x11d80cbf8>, {}, ['Return the psd o
2017-07-18 16:20:16,792 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: wwz_psd(ys, ts, freqs=None, tau=None, c=0.001, nproc=8, nMC=200, detrend='no', Neff=3, anti_alias=False, avgs=2, method='Kirchner_f2py')
   :module: pyleoclim.Spectral

   Return the psd of a timeseires directly using wwz method.
   
   Args:
       ys (array): a time series, NaNs will be deleted automatically
       ts (array): the time points, if `ys` contains any NaNs, some of the time points will be deleted accordingly
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       c (float): the decay constant, the default value 1e-3 is good for most of the cases
       nproc (int): the number of processes for multiprocessing
       nMC (int): the number of Monte-Carlo simulations
       detrend (str): 'no' - the original time series is assumed to have no trend;
                      'linear' - a linear least-squares fit to `ys` is subtracted;
                      'constant' - the mean of `ys` is subtracted
       method (str): 'Foster' - the original WWZ method;
                     'Kirchner' - the method Kirchner adapted from Foster;
                     'Kirchner_f2py' - the method Kirchner adapted from Foster with f2py
   
   Returns:
       psd (array): power spectral density
       freqs (array): vector of frequency
       psd_ar1_q95 (array): the 95% quantile of the psds of AR1 processes
   
   
2017-07-18 16:20:16,831 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:16,857 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:16,876 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:14: input:
.. autofunction:: pyleoclim.Spectral.plot_wwa

2017-07-18 16:20:16,891 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_wwa
2017-07-18 16:20:16,909 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 16:20:16,929 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 16:20:16,947 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_wwa')
2017-07-18 16:20:16,965 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_wwa at 0x11d80cd08>
2017-07-18 16:20:16,991 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_wwa', <function plot_wwa at 0x11d80cd08>, {}, ['Plot the wavel
2017-07-18 16:20:17,009 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_wwa(wwa, freqs, tau, Neff=3, AR1_q=None, coi=None, levels=None, tick_range=None, yticks=None, ylim=None, xticks=None, xlabels=None, figsize=[20, 8], clr_map='OrRd', cbar_drawedges=False, cone_alpha=0.5, plot_signif=False, signif_style='contour', plot_cone=False, ax=None, xlabel='Year', ylabel='Period')
   :module: pyleoclim.Spectral

   Plot the wavelet amplitude
   
   Args:
       wwa (array): the weighted wavelet amplitude.
       freqs (array): vector of frequency
       tau (array): the evenly-spaced time points, namely the time shift for wavelet analysis
       Neff (int): effective number of points
       AR1_q (array): AR1 simulations
       coi (array): cone of influence
       levels (array): levels of values to plot
       tick_range (array): levels of ticks to show on the colorbar
       yticks (list): ticks on y-axis
       ylim (list): limitations for y-axis
       xticks (list): ticks on x-axis
       figsize (list): the size for the figure
       clr_map (str): the name of the colormap
       cbar_drawedges (bool): whether to draw edges on the colorbar or not
       cone_alpha (float): the alpha value for the area covered by cone of influence
       plot_signif (bool): plot 95% significant area or not
       signif_style (str): plot 95% significant area with `contour` or `shade`
       plot_cone (bool): plot cone of influence or not
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
       xlabel (str): The x-axis label
       ylabel (str): The y-axis label
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 16:20:17,034 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:16: input:
.. autofunction:: pyleoclim.Spectral.plot_wwadist

2017-07-18 16:20:17,052 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_wwadist
2017-07-18 16:20:17,071 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 16:20:17,089 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 16:20:17,110 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_wwadist')
2017-07-18 16:20:17,127 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_wwadist at 0x11d80cd90>
2017-07-18 16:20:17,144 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_wwadist', <function plot_wwadist at 0x11d80cd90>, {}, ['Plot t
2017-07-18 16:20:17,162 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_wwadist(wwa, ylim=None)
   :module: pyleoclim.Spectral

   Plot the distribution of wwa with the 95% quantile line.
   
   Args:
       wwa (array): the weighted wavelet amplitude.
       ylim (list): limitations for y-axis
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 16:20:17,199 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Spectral.rst:18: input:
.. autofunction:: pyleoclim.Spectral.plot_psd
2017-07-18 16:20:17,240 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Spectral import plot_psd
2017-07-18 16:20:17,269 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Spectral
2017-07-18 16:20:17,285 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Spectral' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py'>
2017-07-18 16:20:17,302 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'plot_psd')
2017-07-18 16:20:17,322 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function plot_psd at 0x11d80ce18>
2017-07-18 16:20:17,341 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Spectral.plot_psd', <function plot_psd at 0x11d80ce18>, {}, ['Plot the wavel
2017-07-18 16:20:17,357 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: plot_psd(psd, freqs, lmstyle=None, linewidth=None, xticks=None, xlim=None, ylim=None, figsize=[20, 8], label='PSD', plot_ar1=True, psd_ar1_q95=None, psd_ar1_color='#d9544d', ax=None, xlabel='Period', ylabel='Spectral Density')
   :module: pyleoclim.Spectral

   Plot the wavelet amplitude
   
   Args:
       psd (array): power spectral density
       freqs (array): vector of frequency
       xticks (list): ticks on x-axis
       xlim (list): limits for x-axis
       figsize (list): the size for the figure
       ax: Return as axis instead of figure (useful to integrate plot into a subplot)
       xlabel (str): The x-axis label
       ylabel (str): The y-axis label
   
   Returns:
       fig (figure): the 2-D plot of wavelet analysis
   
   
2017-07-18 16:20:17,392 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.ar1_fit:7: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:17,407 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.ar1_sim:8: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:17,425 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz:13: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:17,445 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz:15: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:17,463 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz_psd:12: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:17,478 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Spectral.py:docstring of pyleoclim.Spectral.wwz_psd:14: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:17,491 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "spectral functions"...>>,)
2017-07-18 16:20:17,511 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 70%] [35mStats[39;49;00m                                                 
2017-07-18 16:20:17,545 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>, 'Stats')
2017-07-18 16:20:17,573 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Stats', ['Statistics Functions\n====================\n\n.. autofunction:: pyleoclim.Stats.simpleSt
2017-07-18 16:20:17,588 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Stats.rst:4: input:
.. autofunction:: pyleoclim.Stats.simpleStats

2017-07-18 16:20:17,608 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Stats import simpleStats
2017-07-18 16:20:17,633 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Stats
2017-07-18 16:20:17,670 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Stats' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py'>
2017-07-18 16:20:17,687 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'simpleStats')
2017-07-18 16:20:17,702 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function simpleStats at 0x11d80cf28>
2017-07-18 16:20:17,788 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Stats.simpleStats', <function simpleStats at 0x11d80cf28>, {}, ['Computes si
2017-07-18 16:20:17,806 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: simpleStats(y, axis=None)
   :module: pyleoclim.Stats

   Computes simple statistics
   
   Computes the mean, median, min, max, standard deviation, and interquartile
   range of a numpy array y.
   
   Args:
       y (array): A Numpy array
       axis (int, typle of ints): Optional. Axis or Axes along which the means
           are computed, the default is to compute the mean of the flattened
           array. If a tuple of ints, performed over multiple axes
   
   Returns:
       The mean, median, min, max, standard deviation and IQR by columns
   
   
2017-07-18 16:20:17,825 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:17,848 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Stats.rst:6: input:
.. autofunction:: pyleoclim.Stats.corrsig
2017-07-18 16:20:17,869 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Stats import corrsig
2017-07-18 16:20:17,893 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Stats
2017-07-18 16:20:17,913 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Stats' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py'>
2017-07-18 16:20:17,935 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'corrsig')
2017-07-18 16:20:17,952 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function corrsig at 0x11d8a70d0>
2017-07-18 16:20:17,967 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Stats.corrsig', <function corrsig at 0x11d8a70d0>, {}, ['Estimates the signi
2017-07-18 16:20:17,984 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: corrsig(y1, y2, nsim=1000, method='isospectral', alpha=0.5)
   :module: pyleoclim.Stats

   Estimates the significance of correlations between non IID time series by 3 independent methods:
       1) 'ttest': T-test where d.o.f are corrected for the effect of serial correlation
       2) 'isopersistent': AR(1) modeling of x and y.
       3) 'isospectral': phase randomization of original inputs. (default)
       The T-test is parametric test, hence cheap but usually wrong except in idyllic circumstances.
       The others are non-parametric, but their computational requirements scales with nsim.
   
   Args:
       y1, y2 (array)- vector of (real) numbers of identical length, no NaNs allowed
       nsim (int)- the number of simulations [1000]
       method (str)- methods 1-3 above ['isospectral']
       alpha (float)- significance level for critical value estimation [0.05]
   
   Returns:
        r (real): correlation between x and y 
   
        signif (int): true  if significant; false otherwise 
   
        p (real): Fraction of time series with higher correlation coefficents than observed (approximates the p-value). 
   
           Note that signif = True if and only if p <= alpha.
   
2017-07-18 16:20:18,003 [WARNING] sphinx.util.docutils: Enumerated list ends without a blank line; unexpected unindent.
2017-07-18 16:20:18,026 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py:docstring of pyleoclim.Stats.simpleStats:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:18,046 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Stats.py:docstring of pyleoclim.Stats.corrsig:4: (WARNING/2) Enumerated list ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:18,060 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "statistics functions"...>>,)
2017-07-18 16:20:18,080 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 80%] [35mSummaryPlots[39;49;00m                                          
2017-07-18 16:20:18,096 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>, 'SummaryPlots')
2017-07-18 16:20:18,114 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('SummaryPlots', ['Summary Plots\n==============\n\nThis module handles some basic return for the su
2017-07-18 16:20:18,132 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:8: input:
.. autofunction:: pyleoclim.SummaryPlots.getMetadata

2017-07-18 16:20:18,155 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import getMetadata
2017-07-18 16:20:18,173 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 16:20:18,189 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 16:20:18,205 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'getMetadata')
2017-07-18 16:20:18,220 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function getMetadata at 0x11c9009d8>
2017-07-18 16:20:18,289 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.getMetadata', <function getMetadata at 0x11c9009d8>, {}, ['Get 
2017-07-18 16:20:18,308 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: getMetadata(timeseries)
   :module: pyleoclim.SummaryPlots

   Get the necessary metadata to be printed out automatically
   
   Args:
       timeseries: a specific timeseries object. 
       
   Returns:
       A dictionary containing the following metadata:
   
       archiveType 
   
       Authors (if more than 2, replace by et al. 
   
       PublicationYear 
   
       Publication DOI 
   
       Variable Name 
   
       Units 
   
       Climate Interpretation 
   
       Calibration Equation 
   
       Calibration References 
   
       Calibration Notes 
   
       
   
2017-07-18 16:20:18,326 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:10: input:
.. autofunction:: pyleoclim.SummaryPlots.TsData

2017-07-18 16:20:18,349 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import TsData
2017-07-18 16:20:18,365 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 16:20:18,380 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 16:20:18,396 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'TsData')
2017-07-18 16:20:18,409 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function TsData at 0x11c900a60>
2017-07-18 16:20:18,425 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.TsData', <function TsData at 0x11c900a60>, {}, ['Get the PaleoD
2017-07-18 16:20:18,447 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: TsData(timeseries, x_axis='')
   :module: pyleoclim.SummaryPlots

   Get the PaleoData with age/depth information
       
   Get the necessary information for the TS plots/necessary to allow for
   axes specification
   
   Args:
       timeseries: a single timeseries object. 
           By default, will prompt the user
       x-axis (str): The representation against which to plot the 
           paleo-data. Options are "age", "year", and "depth". 
           Default is to let the system choose if only one available 
           or prompt the user.
   Returns:
       x - the x-valus 
   
       y - the y-values 
   
       archiveType - the archiveType (for plot settings) 
   
       x_label - the label for the x-axis 
   
       y_label - the label for the y-axis 
   
       label - the results of the x-axis query. Either depth, year, or age
       
   
2017-07-18 16:20:18,470 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/SummaryPlots.rst:12: input:
.. autofunction:: pyleoclim.SummaryPlots.agemodelData
2017-07-18 16:20:18,486 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.SummaryPlots import agemodelData
2017-07-18 16:20:18,502 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.SummaryPlots
2017-07-18 16:20:18,516 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.SummaryPlots' from '//anaconda/lib/python3.5/site-packages/pyleoclim/SummaryPlots.py'>
2017-07-18 16:20:18,532 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'agemodelData')
2017-07-18 16:20:18,559 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function agemodelData at 0x11c900ae8>
2017-07-18 16:20:18,579 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.SummaryPlots.agemodelData', <function agemodelData at 0x11c900ae8>, {}, ['Ge
2017-07-18 16:20:18,604 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: agemodelData(timeseries)
   :module: pyleoclim.SummaryPlots

   Get the necessary information for the agemodel plot
   
   Args:
       timeseries: a single timeseries object. By default, will
           prompt the user
   
   Returns:
       depth - the depth values 
   
       age - the age values 
   
       x_label - the label for the x-axis 
   
       y_label - the label for the y-axis 
   
       archiveType - the archiveType (for default plot settings)
   
   
2017-07-18 16:20:18,633 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "summary plots"...>>,)
2017-07-18 16:20:18,661 [INFO] sphinx.util: [01mreading sources... [39;49;00m[ 90%] [35mTimeseries[39;49;00m                                            
2017-07-18 16:20:18,680 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>, 'Timeseries')
2017-07-18 16:20:18,722 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('Timeseries', ['Timeseries Functions\n====================\n\nThis module allows the manipulation o
2017-07-18 16:20:18,751 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:6: input:
.. autofunction:: pyleoclim.Timeseries.bin

2017-07-18 16:20:18,769 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import bin
2017-07-18 16:20:18,783 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 16:20:18,803 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 16:20:18,817 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'bin')
2017-07-18 16:20:18,835 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function bin at 0x11d806620>
2017-07-18 16:20:18,893 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.bin', <function bin at 0x11d806620>, {}, ['Bin the values', '', '
2017-07-18 16:20:18,909 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: bin(x, y, bin_size='', start='', end='')
   :module: pyleoclim.Timeseries

   Bin the values
   
   Args:
       x (array): the x-axis series.
       y (array): the y-axis series.
       bin_size (float): The size of the bins. Default is the average resolution
       start (float): Where/when to start binning. Default is the minimum
       end (float): When/where to stop binning. Defulat is the maximum
   
   Returns:
       binned_values - the binned output 
   
       bins - the bins (centered on the median, i.e., the 100-200 bin is 150) 
   
       n - number of data points in each bin 
   
       error -  the standard error on the mean in each bin
   
   
2017-07-18 16:20:18,932 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:8: input:
.. autofunction:: pyleoclim.Timeseries.interp

2017-07-18 16:20:18,950 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import interp
2017-07-18 16:20:18,989 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 16:20:19,016 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 16:20:19,035 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'interp')
2017-07-18 16:20:19,073 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function interp at 0x11d806730>
2017-07-18 16:20:19,089 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.interp', <function interp at 0x11d806730>, {}, ['Linear interpola
2017-07-18 16:20:19,107 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: interp(x, y, interp_step='', start='', end='')
   :module: pyleoclim.Timeseries

   Linear interpolation onto a new x-axis
   
   Args:
       x (array): the x-axis
       y (array): the y-axis
       interp_step (float): the interpolation step. Default is mean resolution.
       start (float): where/when to start the interpolation. Default is min..
       end (float): where/when to stop the interpolation. Defaul is max.
   
   Returns:
       xi - the interpolated x-axis 
   
       interp_values - the interpolated values
    
   
2017-07-18 16:20:19,127 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:10: input:
.. autofunction:: pyleoclim.Timeseries.onCommonAxis

2017-07-18 16:20:19,146 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import onCommonAxis
2017-07-18 16:20:19,180 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 16:20:19,200 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 16:20:19,218 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'onCommonAxis')
2017-07-18 16:20:19,238 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function onCommonAxis at 0x11d8067b8>
2017-07-18 16:20:19,270 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.onCommonAxis', <function onCommonAxis at 0x11d8067b8>, {}, ['Plac
2017-07-18 16:20:19,294 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: onCommonAxis(x1, y1, x2, y2, interp_step='', start='', end='')
   :module: pyleoclim.Timeseries

   Places two timeseries on a common axis
   
   Args:
       x1 (array): x-axis values of the first timeseries
       y1 (array): y-axis values of the first timeseries
       x2 (array): x-axis values of the second timeseries
       y2 (array): y-axis values of the second timeseries
       interp_step (float): The interpolation step. Default is mean resolution
           of lowest resolution series
       start (float): where/when to start. Default is the maximum of the minima of
           the two timeseries
       end (float): Where/when to end. Default is the minimum of the maxima of
           the two timeseries
   
   Returns:
       xi -  the interpolated x-axis 
   
       interp_values1 -  the interpolated y-values for the first timeseries
       interp_values2 - the intespolated y-values for the second timeseries
   
2017-07-18 16:20:19,335 [ERROR] sphinx.util.docutils: Unexpected indentation.
2017-07-18 16:20:19,376 [WARNING] sphinx.util.docutils: Block quote ends without a blank line; unexpected unindent.
2017-07-18 16:20:19,401 [DEBUG] sphinx.ext.autodoc: [autodoc] /Users/deborahkhider/Documents/Python/Pyleoclim_util/Documentation/Timeseries.rst:12: input:
.. autofunction:: pyleoclim.Timeseries.standardize
2017-07-18 16:20:19,419 [DEBUG] sphinx.ext.autodoc: [autodoc] from pyleoclim.Timeseries import standardize
2017-07-18 16:20:19,435 [DEBUG] sphinx.ext.autodoc: [autodoc] import pyleoclim.Timeseries
2017-07-18 16:20:19,449 [DEBUG] sphinx.ext.autodoc: [autodoc] => <module 'pyleoclim.Timeseries' from '//anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py'>
2017-07-18 16:20:19,468 [DEBUG] sphinx.ext.autodoc: [autodoc] getattr(_, 'standardize')
2017-07-18 16:20:19,501 [DEBUG] sphinx.ext.autodoc: [autodoc] => <function standardize at 0x11d806840>
2017-07-18 16:20:19,576 [DEBUG] sphinx.application: [app] emitting event: 'autodoc-process-docstring'('function', 'pyleoclim.Timeseries.standardize', <function standardize at 0x11d806840>, {}, ['Center
2017-07-18 16:20:19,600 [DEBUG] sphinx.ext.autodoc: [autodoc] output:

.. py:function:: standardize(x, scale=1, axis=0, ddof=0, eps=0.001)
   :module: pyleoclim.Timeseries

   Centers and normalizes a given time series. Constant or nearly constant time series not rescaled.
   
   Args:
       x (array): vector of (real) numbers as a time series, NaNs allowed
       scale (real): a scale factor used to scale a record to a match a given variance
       axis (int or None): axis along which to operate, if None, compute over the whole array
       ddof (int): degress of freedom correction in the calculation of the standard deviation
       eps (real): a threshold to determine if the standard deviation is too close to zero
   
   Returns:
       z (array): the standardized time series (z-score), Z = (X - E[X])/std(X)*scale, NaNs allowed
       mu (real): the mean of the original time series, E[X]
       sig (real): the standard deviation of the original time series, std[X]
   
   References:
       1. Tapio Schneider's MATLAB code: http://www.clidyn.ethz.ch/imputation/standardize.m
       2. The zscore function in SciPy: https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py
   
   @author: fzhu
   
2017-07-18 16:20:19,632 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py:docstring of pyleoclim.Timeseries.onCommonAxis:9: (ERROR/3) Unexpected indentation. [filtered system message]
2017-07-18 16:20:19,649 [DEBUG] sphinx.transforms: //anaconda/lib/python3.5/site-packages/pyleoclim/Timeseries.py:docstring of pyleoclim.Timeseries.onCommonAxis:10: (WARNING/2) Block quote ends without a blank line; unexpected unindent. [filtered system message]
2017-07-18 16:20:19,677 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <section "timeseries functions"...>>,)
2017-07-18 16:20:19,702 [INFO] sphinx.util: [01mreading sources... [39;49;00m[100%] [35mindex[39;49;00m                                                 
2017-07-18 16:20:19,722 [DEBUG] sphinx.application: [app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>, 'index')
2017-07-18 16:20:19,748 [DEBUG] sphinx.application: [app] emitting event: 'source-read'('index', [".. Pyleoclim documentation master file, created by\n   sphinx-quickstart on Fri Feb 10 1
2017-07-18 16:20:19,784 [DEBUG] sphinx.application: [app] emitting event: 'doctree-read'(<document: <comment...><section "welcome to pyleoclim's documentati ...>,)
2017-07-18 16:20:19,806 [INFO] sphinx.util: 
2017-07-18 16:20:19,822 [DEBUG] sphinx.application: [app] emitting event: 'env-updated'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>,)
2017-07-18 16:20:05,034 [WARNING] sphinx.util.docutils: Literal block expected; none found.
2017-07-18 16:20:19,902 [INFO] sphinx.builders: [01mlooking for now-outdated files... [39;49;00m
2017-07-18 16:20:19,947 [DEBUG] sphinx.application: [app] emitting event: 'env-get-updated'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>,)
2017-07-18 16:20:20,010 [INFO] sphinx.builders: none found
2017-07-18 16:20:20,086 [INFO] sphinx.builders: [01mpickling environment... [39;49;00m
2017-07-18 16:20:20,119 [INFO] sphinx.builders: done
2017-07-18 16:20:20,162 [INFO] sphinx.builders: [01mchecking consistency... [39;49;00m
2017-07-18 16:20:20,218 [DEBUG] sphinx.application: [app] emitting event: 'env-check-consistency'(<sphinx.environment.BuildEnvironment object at 0x10a6a2550>,)
2017-07-18 16:20:20,287 [INFO] sphinx.builders: done
2017-07-18 16:20:20,311 [DEBUG] sphinx.builders: docnames to write: Introduction, LipdUtils, Main, Map, Plot, Spectral, Stats, SummaryPlots, Timeseries, index
2017-07-18 16:20:20,337 [INFO] sphinx.builders: [01mpreparing documents... [39;49;00m
2017-07-18 16:20:20,376 [INFO] sphinx.builders: done
2017-07-18 16:20:20,406 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 10%] [32mIntroduction[39;49;00m                                           
2017-07-18 16:20:20,425 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "pyleoclim"...>>, 'Introduction')
2017-07-18 16:20:20,587 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 20%] [32mLipdUtils[39;49;00m                                              
2017-07-18 16:20:20,610 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "lipd utilities"...>>, 'LipdUtils')
2017-07-18 16:20:20,687 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 30%] [32mMain[39;49;00m                                                   
2017-07-18 16:20:20,715 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "main functions"...>>, 'Main')
2017-07-18 16:20:20,811 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 40%] [32mMap[39;49;00m                                                    
2017-07-18 16:20:20,841 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "mapping functions"...>>, 'Map')
2017-07-18 16:20:20,925 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 50%] [32mPlot[39;49;00m                                                   
2017-07-18 16:20:20,956 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "plotting functions"...>>, 'Plot')
2017-07-18 16:20:21,037 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 60%] [32mSpectral[39;49;00m                                               
2017-07-18 16:20:21,097 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "spectral functions"...>>, 'Spectral')
2017-07-18 16:20:21,148 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 70%] [32mStats[39;49;00m                                                  
2017-07-18 16:20:21,187 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "statistics functions"...>>, 'Stats')
2017-07-18 16:20:21,359 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 80%] [32mSummaryPlots[39;49;00m                                           
2017-07-18 16:20:21,388 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "summary plots"...>>, 'SummaryPlots')
2017-07-18 16:20:21,464 [INFO] sphinx.util: [01mwriting output... [39;49;00m[ 90%] [32mTimeseries[39;49;00m                                             
2017-07-18 16:20:21,496 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <section "timeseries functions"...>>, 'Timeseries')
2017-07-18 16:20:21,597 [INFO] sphinx.util: [01mwriting output... [39;49;00m[100%] [32mindex[39;49;00m                                                  
2017-07-18 16:20:21,629 [DEBUG] sphinx.application: [app] emitting event: 'doctree-resolved'(<document: <comment...><section "welcome to pyleoclim's documentati ...>, 'index')
2017-07-18 16:20:21,746 [INFO] sphinx.util: 
2017-07-18 16:20:21,771 [INFO] sphinx.builders.html: [01mgenerating indices...[39;49;00m
2017-07-18 16:20:21,793 [INFO] sphinx.builders.html:  genindex
2017-07-18 16:20:21,896 [INFO] sphinx.builders.html: 
2017-07-18 16:20:21,919 [DEBUG] sphinx.application: [app] emitting event: 'html-collect-pages'()
2017-07-18 16:20:21,942 [INFO] sphinx.builders.html: [01mwriting additional pages...[39;49;00m
2017-07-18 16:20:21,962 [INFO] sphinx.builders.html:  search
2017-07-18 16:20:22,004 [INFO] sphinx.builders.html: 
2017-07-18 16:20:22,031 [INFO] sphinx.builders.html: [01mcopying static files... [39;49;00m
2017-07-18 16:20:22,227 [INFO] sphinx.builders.html: done
2017-07-18 16:20:22,260 [INFO] sphinx.builders.html: [01mcopying extra files... [39;49;00m
2017-07-18 16:20:22,383 [INFO] sphinx.builders.html: done
2017-07-18 16:20:22,414 [INFO] sphinx.builders.html: [01mdumping search index in English (code: en) ... [39;49;00m
2017-07-18 16:20:22,468 [INFO] sphinx.builders.html: done
2017-07-18 16:20:22,499 [INFO] sphinx.builders.html: [01mdumping object inventory... [39;49;00m
2017-07-18 16:20:22,549 [INFO] sphinx.builders.html: done
2017-07-18 16:20:22,574 [INFO] sphinx.application: [01mbuild succeeded, 1 warning.[39;49;00m
2017-07-18 16:20:22,598 [DEBUG] sphinx.application: [app] emitting event: 'build-finished'(None,)
